{
  if (classNameBiMap == null) {
    return;
  }
  List<String> allParents=ImmutableList.<String>builder().add(superName).addAll(Arrays.asList(interfaces)).build();
  for (  String parentThing : allParents) {
    if (superName != null && classNameBiMap.containsKey(superName) && !methodNameMaps.containsKey(superName)) {
      findAndMergeSuperMaps(superName);
    }
  }
  System.out.printf("Merging maps for %s (%s , %s)\n",name,superName,Arrays.asList(interfaces));
  Map<String,String> methodMap=Maps.<String,String>newHashMap();
  for (  String parentThing : allParents) {
    if (methodNameMaps.containsKey(parentThing)) {
      methodMap.putAll(methodNameMaps.get(parentThing));
    }
  }
  if (rawMethodMaps.containsKey(name)) {
    methodMap.putAll(rawMethodMaps.get(name));
  }
  methodNameMaps.put(name,ImmutableMap.copyOf(methodMap));
}
