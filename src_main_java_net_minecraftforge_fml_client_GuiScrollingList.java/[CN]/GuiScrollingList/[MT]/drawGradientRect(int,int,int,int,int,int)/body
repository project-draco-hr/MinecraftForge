{
  float a1=(float)(color1 >> 24 & 255) / 255.0F;
  float r1=(float)(color1 >> 16 & 255) / 255.0F;
  float g1=(float)(color1 >> 8 & 255) / 255.0F;
  float b1=(float)(color1 & 255) / 255.0F;
  float a2=(float)(color2 >> 24 & 255) / 255.0F;
  float r2=(float)(color2 >> 16 & 255) / 255.0F;
  float g2=(float)(color2 >> 8 & 255) / 255.0F;
  float b2=(float)(color2 & 255) / 255.0F;
  GlStateManager.disableTexture2D();
  GlStateManager.enableBlend();
  GlStateManager.disableAlpha();
  GlStateManager.tryBlendFuncSeparate(GL11.GL_SRC_ALPHA,GL11.GL_ONE_MINUS_SRC_ALPHA,1,0);
  GlStateManager.shadeModel(GL11.GL_SMOOTH);
  Tessellator tessellator=Tessellator.getInstance();
  WorldRenderer worldrenderer=tessellator.getWorldRenderer();
  worldrenderer.startDrawingQuads();
  worldrenderer.setColorRGBA_F(r1,g1,b1,a1);
  worldrenderer.addVertex(right,top,0.0D);
  worldrenderer.addVertex(left,top,0.0D);
  worldrenderer.setColorRGBA_F(r2,g2,b2,a2);
  worldrenderer.addVertex(left,bottom,0.0D);
  worldrenderer.addVertex(right,bottom,0.0D);
  tessellator.draw();
  GlStateManager.shadeModel(GL11.GL_FLAT);
  GlStateManager.disableBlend();
  GlStateManager.enableAlpha();
  GlStateManager.enableTexture2D();
}
