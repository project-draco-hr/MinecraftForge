{
  float f=(float)(par5 >> 24 & 255) / 255.0F;
  float f1=(float)(par5 >> 16 & 255) / 255.0F;
  float f2=(float)(par5 >> 8 & 255) / 255.0F;
  float f3=(float)(par5 & 255) / 255.0F;
  float f4=(float)(par6 >> 24 & 255) / 255.0F;
  float f5=(float)(par6 >> 16 & 255) / 255.0F;
  float f6=(float)(par6 >> 8 & 255) / 255.0F;
  float f7=(float)(par6 & 255) / 255.0F;
  GlStateManager.disableTexture2D();
  GlStateManager.enableBlend();
  GlStateManager.disableAlpha();
  GlStateManager.tryBlendFuncSeparate(GL11.GL_SRC_ALPHA,GL11.GL_ONE_MINUS_SRC_ALPHA,1,0);
  GlStateManager.shadeModel(GL11.GL_SMOOTH);
  Tessellator tessellator=Tessellator.getInstance();
  WorldRenderer worldrenderer=tessellator.getWorldRenderer();
  worldrenderer.startDrawingQuads();
  worldrenderer.setColorRGBA_F(f1,f2,f3,f);
  worldrenderer.addVertex((double)par3,(double)par2,0.0D);
  worldrenderer.addVertex((double)par1,(double)par2,0.0D);
  worldrenderer.setColorRGBA_F(f5,f6,f7,f4);
  worldrenderer.addVertex((double)par1,(double)par4,0.0D);
  worldrenderer.addVertex((double)par3,(double)par4,0.0D);
  tessellator.draw();
  GlStateManager.shadeModel(GL11.GL_FLAT);
  GlStateManager.disableBlend();
  GlStateManager.enableAlpha();
  GlStateManager.enableTexture2D();
}
