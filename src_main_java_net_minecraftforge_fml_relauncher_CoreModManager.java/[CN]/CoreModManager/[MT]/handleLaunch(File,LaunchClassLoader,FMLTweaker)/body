{
  CoreModManager.mcDir=mcDir;
  CoreModManager.tweaker=tweaker;
  try {
    byte[] bs=classLoader.getClassBytes("net.minecraft.world.World");
    if (bs != null) {
      FMLRelaunchLog.info("Managed to load a deobfuscated Minecraft name- we are in a deobfuscated environment. Skipping runtime deobfuscation");
      deobfuscatedEnvironment=true;
    }
  }
 catch (  IOException e1) {
  }
  if (!deobfuscatedEnvironment) {
    FMLRelaunchLog.fine("Enabling runtime deobfuscation");
  }
  tweaker.injectCascadingTweak("net.minecraftforge.fml.common.launcher.FMLInjectionAndSortingTweaker");
  try {
    classLoader.registerTransformer("net.minecraftforge.fml.common.asm.transformers.PatchingTransformer");
  }
 catch (  Exception e) {
    FMLRelaunchLog.log(Level.ERROR,e,"The patch transformer failed to load! This is critical, loading cannot continue!");
    throw Throwables.propagate(e);
  }
  loadPlugins=new ArrayList<FMLPluginWrapper>();
  for (  String rootPluginName : rootPlugins) {
    loadCoreMod(classLoader,rootPluginName,new File(FMLTweaker.getJarLocation()));
  }
  if (loadPlugins.isEmpty()) {
    throw new RuntimeException("A fatal error has occured - no valid fml load plugin was found - this is a completely corrupt FML installation.");
  }
  FMLRelaunchLog.fine("All fundamental core mods are successfully located");
  String commandLineCoremods=System.getProperty("fml.coreMods.load","");
  for (  String coreModClassName : commandLineCoremods.split(",")) {
    if (coreModClassName.isEmpty()) {
      continue;
    }
    FMLRelaunchLog.info("Found a command line coremod : %s",coreModClassName);
    loadCoreMod(classLoader,coreModClassName,null);
  }
  discoverCoreMods(mcDir,classLoader);
}
