{
  try {
    File mapData=new File(deobfFileName);
    LZMAInputSupplier zis=new LZMAInputSupplier(new FileInputStream(mapData));
    CharSource srgSource=zis.asCharSource(Charsets.UTF_8);
    List<String> srgList=srgSource.readLines();
    rawMethodMaps=Maps.newHashMap();
    rawFieldMaps=Maps.newHashMap();
    Builder<String,String> builder=ImmutableBiMap.builder();
    Splitter splitter=Splitter.on(CharMatcher.anyOf(": ")).omitEmptyStrings().trimResults();
    for (    String line : srgList) {
      String[] parts=Iterables.toArray(splitter.split(line),String.class);
      String typ=parts[0];
      if ("CL".equals(typ)) {
        parseClass(builder,parts);
      }
 else       if ("MD".equals(typ) && loadAll) {
        parseMethod(parts);
      }
 else       if ("FD".equals(typ) && loadAll) {
        parseField(parts);
      }
    }
    classNameBiMap=builder.build();
  }
 catch (  IOException ioe) {
    FMLRelaunchLog.log(Level.ERROR,"An error occurred loading the deobfuscation map data",ioe);
  }
  methodNameMaps=Maps.newHashMapWithExpectedSize(rawMethodMaps.size());
  fieldNameMaps=Maps.newHashMapWithExpectedSize(rawFieldMaps.size());
}
