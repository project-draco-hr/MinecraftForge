{
  Set<Class<?>> parents=Sets.newHashSet();
  findSuperTypes(type,parents);
  SetView<Class<?>> overlappedTypes=Sets.intersection(parents,registryTypes.values());
  if (!overlappedTypes.isEmpty()) {
    Class<?> foundType=overlappedTypes.iterator().next();
    FMLLog.severe("Found existing registry of type %1s named %2s, you cannot create a new registry (%3s) with type %4s, as %4s has a parent of that type",foundType,registryTypes.inverse().get(foundType),registryName,type);
    throw new IllegalArgumentException("Duplicate registry parent type found - you can only have one registry for a particular super type");
  }
  FMLControlledNamespacedRegistry<?> fmlControlledNamespacedRegistry=new FMLControlledNamespacedRegistry<T>(null,maxId,minId,type);
  genericRegistries.put(registryName,fmlControlledNamespacedRegistry);
  registryTypes.put(registryName,type);
  return (FMLControlledNamespacedRegistry<T>)fmlControlledNamespacedRegistry;
}
