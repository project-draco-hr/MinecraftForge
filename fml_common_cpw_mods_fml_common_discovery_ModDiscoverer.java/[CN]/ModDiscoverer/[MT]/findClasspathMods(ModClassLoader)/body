{
  List<String> knownLibraries=ImmutableList.<String>builder().addAll(modClassLoader.getDefaultLibraries()).addAll(RelaunchLibraryManager.getLibraries()).build();
  File[] minecraftSources=modClassLoader.getParentSources();
  if (minecraftSources.length == 1 && minecraftSources[0].isFile()) {
    FMLLog.fine("Minecraft is a file at %s, loading",minecraftSources[0].getAbsolutePath());
    candidates.add(new ModCandidate(minecraftSources[0],minecraftSources[0],ContainerType.JAR));
  }
 else {
    for (int i=0; i < minecraftSources.length; i++) {
      if (minecraftSources[i].isFile()) {
        if (knownLibraries.contains(minecraftSources[i].getName())) {
          FMLLog.fine("Skipping known library file %s",minecraftSources[i].getAbsolutePath());
        }
 else {
          FMLLog.fine("Found a minecraft related file at %s, examining for mod candidates",minecraftSources[i].getAbsolutePath());
          candidates.add(new ModCandidate(minecraftSources[i],minecraftSources[i],ContainerType.JAR,true));
        }
      }
 else       if (minecraftSources[i].isDirectory()) {
        FMLLog.fine("Found a minecraft related directory at %s, examining for mod candidates",minecraftSources[i].getAbsolutePath());
        candidates.add(new ModCandidate(minecraftSources[i],minecraftSources[i],ContainerType.DIR,true));
      }
    }
  }
}
