{
  final PersistentRegistryManager.GameDataSnapshot snapshot=PersistentRegistryManager.takeSnapshot();
  GameRegistry.addSubstitutionAlias("minecraft:dirt",GameRegistry.Type.BLOCK,toSub);
  PersistentRegistryManager.freezeData();
  ObjectHolderRegistry.INSTANCE.applyObjectHolders();
  StatList.reinit();
  final FMLControlledNamespacedRegistry<Block> blockRegistry=(FMLControlledNamespacedRegistry<Block>)PersistentRegistryManager.findRegistryByType(Block.class);
  Block fnd=blockRegistry.getValue(myDirt);
  Block currDirt=Blocks.DIRT;
  assertEquals("Got my dirt substitute - Blocks",toSub,currDirt);
  assertEquals("Got my dirt substitute - Blocks and registry",currDirt,fnd);
  assertEquals("Got my dirt substitute - registry",toSub,fnd);
  PersistentRegistryManager.injectSnapshot(snapshot,true,true);
  ObjectHolderRegistry.INSTANCE.applyObjectHolders();
  fnd=blockRegistry.getValue(myDirt);
  currDirt=Blocks.DIRT;
  assertEquals("Got my dirt substitute - Blocks",toSub,currDirt);
  assertEquals("Got my dirt substitute - Blocks and registry",currDirt,fnd);
  assertEquals("Got my dirt substitute - registry",toSub,fnd);
  PersistentRegistryManager.revertToFrozen();
  ObjectHolderRegistry.INSTANCE.applyObjectHolders();
  fnd=blockRegistry.getValue(myDirt);
  currDirt=Blocks.DIRT;
  assertEquals("Got my dirt substitute - Blocks",toSub,currDirt);
  assertEquals("Got my dirt substitute - Blocks and registry",currDirt,fnd);
  assertEquals("Got my dirt substitute - registry",toSub,fnd);
}
