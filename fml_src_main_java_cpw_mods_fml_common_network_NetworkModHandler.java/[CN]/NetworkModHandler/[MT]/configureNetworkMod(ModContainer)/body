{
  if (this.checkHandler == null) {
    String versionBounds=mod.versionBounds();
    if (!Strings.isNullOrEmpty(versionBounds)) {
      try {
        this.acceptableRange=VersionRange.createFromVersionSpec(versionBounds);
      }
 catch (      InvalidVersionSpecificationException e) {
        FMLLog.log(Level.WARNING,e,"Invalid bounded range %s specified for network mod id %s",versionBounds,container.getModId());
      }
    }
  }
  FMLLog.finest("Testing mod %s to verify it accepts its own version in a remote connection",container.getModId());
  boolean acceptsSelf=acceptVersion(container.getVersion());
  if (!acceptsSelf) {
    FMLLog.severe("The mod %s appears to reject its own version number (%s) in its version handling. This is likely a severe bug in the mod!",container.getModId(),container.getVersion());
  }
 else {
    FMLLog.finest("The mod %s accepts its own version (%s)",container.getModId(),container.getVersion());
  }
  tryCreatingPacketHandler(container,mod.packetHandler(),mod.channels(),null);
  if (FMLCommonHandler.instance().getSide().isClient()) {
    if (mod.clientPacketHandlerSpec() != getClientHandlerSpecDefaultValue()) {
      tryCreatingPacketHandler(container,mod.clientPacketHandlerSpec().packetHandler(),mod.clientPacketHandlerSpec().channels(),Side.CLIENT);
    }
  }
  if (mod.serverPacketHandlerSpec() != getServerHandlerSpecDefaultValue()) {
    tryCreatingPacketHandler(container,mod.serverPacketHandlerSpec().packetHandler(),mod.serverPacketHandlerSpec().channels(),Side.SERVER);
  }
  if (mod.connectionHandler() != getConnectionHandlerDefaultValue()) {
    IConnectionHandler instance;
    try {
      instance=mod.connectionHandler().newInstance();
    }
 catch (    Exception e) {
      FMLLog.log(Level.SEVERE,e,"Unable to create connection handler instance %s",mod.connectionHandler().getName());
      throw new FMLNetworkException(e);
    }
    NetworkRegistry.instance().registerConnectionHandler(instance);
  }
  if (mod.tinyPacketHandler() != getTinyPacketHandlerDefaultValue()) {
    try {
      tinyPacketHandler=mod.tinyPacketHandler().newInstance();
    }
 catch (    Exception e) {
      FMLLog.log(Level.SEVERE,e,"Unable to create tiny packet handler instance %s",mod.tinyPacketHandler().getName());
      throw new FMLNetworkException(e);
    }
  }
}
