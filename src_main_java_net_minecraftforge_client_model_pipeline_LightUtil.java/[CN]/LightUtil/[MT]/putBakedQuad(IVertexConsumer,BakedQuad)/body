{
  try {
    consumer.setTexture(quad.getSprite());
  }
 catch (  AbstractMethodError e) {
  }
  consumer.setQuadOrientation(quad.getFace());
  if (quad.hasTintIndex()) {
    consumer.setQuadTint(quad.getTintIndex());
  }
  consumer.setApplyDiffuseLighting(quad.shouldApplyDiffuseLighting());
  float[] data=new float[4];
  VertexFormat formatFrom=consumer.getVertexFormat();
  VertexFormat formatTo=quad.getFormat();
  int countFrom=formatFrom.getElementCount();
  int countTo=formatTo.getElementCount();
  int[] eMap=formatMaps.getUnchecked(Pair.of(formatFrom,formatTo));
  for (int v=0; v < 4; v++) {
    for (int e=0; e < countFrom; e++) {
      if (eMap[e] != countTo) {
        unpack(quad.getVertexData(),data,quad.getFormat(),v,eMap[e]);
        consumer.put(e,data);
      }
 else {
        consumer.put(e);
      }
    }
  }
}
