{
  int length=4 < to.length ? 4 : to.length;
  VertexFormatElement element=formatFrom.getElement(e);
  int vertexStart=v * formatFrom.getNextOffset() + formatFrom.getOffset(e);
  int count=element.getElementCount();
  VertexFormatElement.EnumType type=element.getType();
  int size=type.getSize();
  int mask=(256 << (8 * (size - 1))) - 1;
  for (int i=0; i < length; i++) {
    if (i < count) {
      int pos=vertexStart + size * i;
      int index=pos >> 2;
      int offset=pos & 3;
      int bits=from[index];
      bits=bits >>> (offset * 8);
      if ((pos + size - 1) / 4 != index) {
        bits|=from[index + 1] << ((4 - offset) * 8);
      }
      bits&=mask;
      if (type == VertexFormatElement.EnumType.FLOAT) {
        to[i]=Float.intBitsToFloat(bits);
      }
 else       if (type == VertexFormatElement.EnumType.UBYTE || type == VertexFormatElement.EnumType.USHORT) {
        to[i]=(float)bits / mask;
      }
 else       if (type == VertexFormatElement.EnumType.UINT) {
        to[i]=(float)((double)(bits & 0xFFFFFFFFL) / 0xFFFFFFFFL);
      }
 else       if (type == VertexFormatElement.EnumType.BYTE) {
        to[i]=((float)(byte)bits) / mask * 2;
      }
 else       if (type == VertexFormatElement.EnumType.SHORT) {
        to[i]=((float)(short)bits) / mask * 2;
      }
 else       if (type == VertexFormatElement.EnumType.INT) {
        to[i]=((float)(bits & 0xFFFFFFFFL)) / 0xFFFFFFFFL * 2;
      }
    }
 else {
      to[i]=0;
    }
  }
}
