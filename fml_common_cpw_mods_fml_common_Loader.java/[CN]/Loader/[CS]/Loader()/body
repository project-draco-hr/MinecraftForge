{
  FMLLogFormatter formatter=new FMLLogFormatter();
  if (FMLCommonHandler.instance().getMinecraftLogger() != null) {
    Loader.log.setParent(FMLCommonHandler.instance().getMinecraftLogger());
  }
 else {
    ConsoleHandler ch=new ConsoleHandler();
    Loader.log.setUseParentHandlers(false);
    Loader.log.addHandler(ch);
    ch.setFormatter(formatter);
  }
  Loader.log.setLevel(Level.ALL);
  try {
    File logPath=new File(FMLCommonHandler.instance().getMinecraftRootDirectory().getCanonicalPath(),"ForgeModLoader-%g.log");
    FileHandler fileHandler=new FileHandler(logPath.getPath(),0,3);
    fileHandler.setFormatter(new FMLLogFormatter());
    fileHandler.setLevel(Level.ALL);
    Loader.log.addHandler(fileHandler);
  }
 catch (  Exception e) {
  }
  InputStream stream=Loader.class.getClassLoader().getResourceAsStream("fmlversion.properties");
  Properties properties=new Properties();
  if (stream != null) {
    try {
      properties.load(stream);
      major=properties.getProperty("fmlbuild.major.number","none");
      minor=properties.getProperty("fmlbuild.minor.number","none");
      rev=properties.getProperty("fmlbuild.revision.number","none");
      build=properties.getProperty("fmlbuild.build.number","none");
      mccversion=properties.getProperty("fmlbuild.mcclientversion","none");
      mcsversion=properties.getProperty("fmlbuild.mcserverversion","none");
    }
 catch (    IOException ex) {
      Loader.log.log(Level.SEVERE,"Could not get FML version information - corrupted installation detected!",ex);
      throw new LoaderException(ex);
    }
  }
  log.info(String.format("Forge Mod Loader version %s.%s.%s.%s for Minecraft c:%s, s:%s loading",major,minor,rev,build,mccversion,mcsversion));
  modClassLoader=new ModClassLoader();
}
