{
  String forcedModList=System.getProperty("fml.modStates","");
  FMLLog.fine("Received a system property request \'%s\'",forcedModList);
  Map<String,String> sysPropertyStateList=Splitter.on(CharMatcher.anyOf(";:")).omitEmptyStrings().trimResults().withKeyValueSeparator("=").split(forcedModList);
  FMLLog.fine("System property request managing the state of %d mods",sysPropertyStateList.size());
  Map<String,String> modStates=Maps.newHashMap();
  File forcedModFile=new File(canonicalConfigDir,"fmlModState.properties");
  Properties forcedModListProperties=new Properties();
  if (forcedModFile.exists() && forcedModFile.isFile()) {
    FMLLog.fine("Found a mod state file %s",forcedModFile.getName());
    try {
      forcedModListProperties.load(new FileReader(forcedModFile));
      FMLLog.fine("Loaded states for %d mods from file",forcedModListProperties.size());
    }
 catch (    Exception e) {
      FMLLog.log(Level.INFO,e,"An error occurred reading the fmlModState.properties file");
    }
  }
  modStates.putAll(Maps.fromProperties(forcedModListProperties));
  modStates.putAll(sysPropertyStateList);
  FMLLog.fine("After merging, found state information for %d mods",modStates.size());
  Map<String,Boolean> isEnabled=Maps.transformValues(modStates,new Function<String,Boolean>(){
    public Boolean apply(    String input){
      return Boolean.parseBoolean(input);
    }
  }
);
  for (  Map.Entry<String,Boolean> entry : isEnabled.entrySet()) {
    if (namedMods.containsKey(entry.getKey())) {
      FMLLog.info("Setting mod %s to enabled state %b",entry.getKey(),entry.getValue());
      namedMods.get(entry.getKey()).setEnabledState(entry.getValue());
    }
  }
}
