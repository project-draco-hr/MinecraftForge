def cleanup_source(path):
    path = os.path.normpath(path)
    regex_cases_before = re.compile('((case|default).+\\r?\\n)\\r?\\n', re.MULTILINE)
    regex_cases_after = re.compile('\\r?\\n(\\r?\\n[ \\t]+(case|default))', re.MULTILINE)

    def updatefile(src_file):
        global count
        tmp_file = (src_file + '.tmp')
        count = 0
        with open(src_file, 'r') as fh:
            buf = fh.read()

        def fix_cases(match):
            global count
            count += 1
            return match.group(1)
        buf = regex_cases_before.sub(fix_cases, buf)
        buf = regex_cases_after.sub(fix_cases, buf)
        if (count > 0):
            with open(tmp_file, 'w') as fh:
                fh.write(buf)
            shutil.move(tmp_file, src_file)
    for (path, _, filelist) in os.walk(path, followlinks=True):
        sub_dir = os.path.relpath(path, path)
        for cur_file in fnmatch.filter(filelist, '*.java'):
            src_file = os.path.normpath(os.path.join(path, cur_file))
            updatefile(src_file)
