{
  if (ticket == null || chunk == null) {
    return;
  }
  if (ticket.ticketType == Type.ENTITY && ticket.entity == null) {
    throw new RuntimeException("Attempted to use an entity ticket to force a chunk, without an entity");
  }
  if (ticket.isPlayerTicket() ? !playerTickets.containsValue(ticket) : !tickets.get(ticket.world).containsEntry(ticket.modId,ticket)) {
    FMLLog.severe("The mod %s attempted to force load a chunk with an invalid ticket. This is not permitted.",ticket.modId);
    return;
  }
  ticket.requestedChunks.add(chunk);
  ImmutableSetMultimap<ChunkCoordIntPair,Ticket> newMap=ImmutableSetMultimap.<ChunkCoordIntPair,Ticket>builder().putAll(forcedChunks.get(ticket.world)).put(chunk,ticket).build();
  forcedChunks.put(ticket.world,newMap);
  if (ticket.maxDepth > 0 && ticket.requestedChunks.size() > ticket.maxDepth) {
    ChunkCoordIntPair removed=ticket.requestedChunks.iterator().next();
    unforceChunk(ticket,removed);
  }
}
