{
  super.fromBytes(dat);
  modId=ByteBufUtils.readUTF8String(dat);
  modEntityTypeId=dat.readInt();
  entityUUID=new UUID(dat.readLong(),dat.readLong());
  rawX=dat.readDouble();
  rawY=dat.readDouble();
  rawZ=dat.readDouble();
  scaledYaw=dat.readByte() * 360F / 256F;
  scaledPitch=dat.readByte() * 360F / 256F;
  scaledHeadYaw=dat.readByte() * 360F / 256F;
  try {
    dataWatcherList=EntityDataManager.readEntries(new PacketBuffer(dat));
  }
 catch (  IOException e) {
    FMLLog.log(Level.FATAL,e,"There was a critical error decoding the datawatcher stream for a mod entity.");
    throw Throwables.propagate(e);
  }
  throwerId=dat.readInt();
  if (throwerId != 0) {
    speedScaledX=dat.readInt() / 8000D;
    speedScaledY=dat.readInt() / 8000D;
    speedScaledZ=dat.readInt() / 8000D;
  }
  this.dataStream=dat;
}
