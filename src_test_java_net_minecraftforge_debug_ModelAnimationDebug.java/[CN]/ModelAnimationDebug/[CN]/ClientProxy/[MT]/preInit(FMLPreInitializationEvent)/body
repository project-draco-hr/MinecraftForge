{
  super.preInit(event);
  B3DLoader.INSTANCE.addDomain(MODID);
  ModelLoader.setCustomModelResourceLocation(Item.itemRegistry.getObject(blockId),0,new ModelResourceLocation(blockId,"inventory"));
  ClientRegistry.bindTileEntitySpecialRenderer(Chest.class,new AnimationTESR<Chest>(){
    @Override public void handleEvents(    Chest chest,    float time,    Iterable<Event> pastEvents){
      chest.handleEvents(time,pastEvents);
    }
  }
);
  String entityName=MODID + ":entity_chest";
  EntityRegistry.registerModEntity(EntityChest.class,entityName,0,ModelAnimationDebug.instance,64,20,true,0xFFAAAA00,0xFFDDDD00);
  RenderingRegistry.registerEntityRenderingHandler(EntityChest.class,new IRenderFactory<EntityChest>(){
    @SuppressWarnings("deprecation") public Render<EntityChest> createRenderFor(    RenderManager manager){
      ResourceLocation location=new ModelResourceLocation(new ResourceLocation(MODID,blockName),"entity");
      return new RenderLiving<EntityChest>(manager,new net.minecraftforge.client.model.animation.AnimationModelBase<EntityChest>(location,new VertexLighterSmoothAo(Minecraft.getMinecraft().getBlockColors())){
        @Override public void handleEvents(        EntityChest chest,        float time,        Iterable<Event> pastEvents){
          chest.handleEvents(time,pastEvents);
        }
      }
,0.5f){
        protected ResourceLocation getEntityTexture(        EntityChest entity){
          return TextureMap.locationBlocksTexture;
        }
      }
;
    }
  }
);
}
