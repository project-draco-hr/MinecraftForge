{
  B3DLoader.instance.addDomain(MODID);
  GameRegistry.registerBlock(new Block(Material.wood){
{
      setCreativeTab(CreativeTabs.tabBlock);
      setUnlocalizedName(MODID + "." + blockName);
    }
    @Override public ExtendedBlockState createBlockState(){
      return new ExtendedBlockState(this,new IProperty[]{FACING,STATIC},new IUnlistedProperty[]{B3DFrameProperty.instance});
    }
    @Override public boolean isOpaqueCube(){
      return false;
    }
    @Override public boolean isFullCube(){
      return false;
    }
    @Override public IBlockState onBlockPlaced(    World world,    BlockPos pos,    EnumFacing facing,    float hitX,    float hitY,    float hitZ,    int meta,    EntityLivingBase placer){
      return this.getDefaultState().withProperty(FACING,BlockPistonBase.getFacingFromEntity(world,pos,placer));
    }
    @Override public IBlockState getStateFromMeta(    int meta){
      return getDefaultState().withProperty(FACING,EnumFacing.getFront(meta));
    }
    @Override public int getMetaFromState(    IBlockState state){
      return ((EnumFacing)state.getValue(FACING)).getIndex();
    }
    @Override public boolean hasTileEntity(    IBlockState state){
      return true;
    }
    @Override public TileEntity createTileEntity(    World world,    IBlockState state){
      return new Chest(state);
    }
    @Override public IBlockState getActualState(    IBlockState state,    IBlockAccess world,    BlockPos pos){
      return state.withProperty(STATIC,true);
    }
    @Override public boolean onBlockActivated(    World world,    BlockPos pos,    IBlockState state,    EntityPlayer player,    EnumFacing side,    float hitX,    float hitY,    float hitZ){
      if (world.isRemote) {
        TileEntity te=world.getTileEntity(pos);
        if (te instanceof Chest) {
          ((Chest)te).click();
        }
      }
      return false;
    }
  }
,blockName);
}
