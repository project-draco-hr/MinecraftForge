{
  try {
    ModClassLoader modClassLoader=event.getModClassLoader();
    modClassLoader.addFile(modSource);
    EnumSet<TickType> ticks=EnumSet.noneOf(TickType.class);
    this.gameTickHandler=new BaseModTicker(ticks,false);
    this.guiTickHandler=new BaseModTicker(ticks.clone(),true);
    Class<? extends BaseModProxy> modClazz=(Class<? extends BaseModProxy>)Class.forName(modClazzName,true,modClassLoader);
    configureMod(modClazz,event.getASMHarvestedData());
    isNetworkMod=FMLNetworkHandler.instance().registerNetworkMod(this,modClazz,event.getASMHarvestedData());
    mod=(BaseModProxy)modClazz.newInstance();
    if (!isNetworkMod) {
      FMLLog.fine("Injecting dummy network mod handler for BaseMod %s",getModId());
      FMLNetworkHandler.instance().registerNetworkMod(new ModLoaderNetworkHandler(this,mod));
    }
    ProxyInjector.inject(this,event.getASMHarvestedData(),FMLCommonHandler.instance().getSide());
  }
 catch (  Exception e) {
    controller.errorOccurred(this,e);
    Throwables.propagateIfPossible(e);
  }
}
