{
  Map<String,ModContainer> indexedModList=Maps.newHashMap(Loader.instance().getIndexedModList());
  List<String> missingClientMods=Lists.newArrayList();
  List<String> versionIncorrectMods=Lists.newArrayList();
  for (  String m : missingMods) {
    ModContainer mc=indexedModList.get(m);
    NetworkModHolder networkMod=handler.findNetworkModHandler(mc);
    if (networkMod.requiresClientSide()) {
      missingClientMods.add(m);
    }
  }
  for (  Entry<String,String> modVersion : modVersions.entrySet()) {
    ModContainer mc=indexedModList.get(modVersion.getKey());
    NetworkModHolder networkMod=handler.findNetworkModHandler(mc);
    if (!networkMod.acceptVersion(modVersion.getValue())) {
      versionIncorrectMods.add(modVersion.getKey());
    }
  }
  Packet250CustomPayload pkt=new Packet250CustomPayload();
  pkt.field_73630_a="FML";
  if (missingClientMods.size() > 0 || versionIncorrectMods.size() > 0) {
    pkt.field_73629_c=FMLOldPacket.makePacket(MOD_MISSING,missingClientMods,versionIncorrectMods);
    Logger.getLogger("Minecraft").info(String.format("User %s connection failed: missing %s, bad versions %s",userName,missingClientMods,versionIncorrectMods));
    FMLLog.info("User %s connection failed: missing %s, bad versions %s",userName,missingClientMods,versionIncorrectMods);
    FMLNetworkHandler.setHandlerState((NetLoginHandler)netHandler,FMLNetworkHandler.MISSING_MODS_OR_VERSIONS);
    pkt.field_73628_b=pkt.field_73629_c.length;
    network.func_74429_a(pkt);
  }
 else {
    pkt.field_73629_c=FMLOldPacket.makePacket(MOD_IDENTIFIERS,netHandler);
    Logger.getLogger("Minecraft").info(String.format("User %s connecting with mods %s",userName,modVersions.keySet()));
    FMLLog.info("User %s connecting with mods %s",userName,modVersions.keySet());
    pkt.field_73628_b=pkt.field_73629_c.length;
    network.func_74429_a(pkt);
    NBTTagList itemList=new NBTTagList();
    GameData.writeItemData(itemList);
    byte[][] registryPackets=FMLOldPacket.makePacketSet(MOD_IDMAP,itemList);
    for (int i=0; i < registryPackets.length; i++) {
      network.func_74429_a(PacketDispatcher.getPacket("FML",registryPackets[i]));
    }
  }
  NetLoginHandler.func_72531_a((NetLoginHandler)netHandler,true);
}
