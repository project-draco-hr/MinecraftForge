{
  this.container=container;
  this.mod=networkModClass.getAnnotation(NetworkMod.class);
  if (this.mod == null) {
    return;
  }
  this.localId=assignedIds++;
  this.networkId=this.localId;
  Set<ASMData> versionCheckHandlers=table.getAnnotationsFor(container).get(NetworkMod.VersionCheckHandler.class.getName());
  String versionCheckHandlerMethod=null;
  for (  ASMData vch : versionCheckHandlers) {
    if (vch.getClassName().equals(networkModClass.getName())) {
      versionCheckHandlerMethod=vch.getObjectName();
      break;
    }
  }
  if (versionCheckHandlerMethod != null) {
    try {
      Method checkHandlerMethod=networkModClass.getDeclaredMethod(versionCheckHandlerMethod,String.class);
      if (checkHandlerMethod.isAnnotationPresent(NetworkMod.VersionCheckHandler.class)) {
        this.checkHandler=checkHandlerMethod;
      }
    }
 catch (    Exception e) {
      FMLLog.log(Level.WARNING,e,"The declared version check handler method %s on network mod id %s is not accessible",versionCheckHandlerMethod,container.getModId());
    }
  }
  if (this.checkHandler == null) {
    String versionBounds=mod.versionBounds();
    if (!Strings.isNullOrEmpty(versionBounds)) {
      try {
        this.acceptableRange=VersionRange.createFromVersionSpec(versionBounds);
      }
 catch (      InvalidVersionSpecificationException e) {
        FMLLog.log(Level.WARNING,e,"Invalid bounded range %s specified for network mod id %s",versionBounds,container.getModId());
      }
    }
  }
  if (!mod.packetHandler().getName().equals(NetworkMod.NULL.class.getName())) {
    IPacketHandler instance;
    try {
      instance=mod.packetHandler().newInstance();
    }
 catch (    Exception e) {
      FMLLog.log(Level.SEVERE,e,"Unable to create packet handler instance %s",mod.packetHandler().getName());
      throw new FMLNetworkException(e);
    }
    for (    String channel : mod.channels()) {
      NetworkRegistry.instance().registerChannel(instance,channel);
    }
  }
 else   if (mod.channels().length > 0) {
    FMLLog.warning("The mod id %s attempted to register channels without specifying a valid packet handler",container.getModId());
  }
  if (!mod.connectionHandler().getName().equals(NetworkMod.NULL.class.getName())) {
    IConnectionHandler instance;
    try {
      instance=mod.connectionHandler().newInstance();
    }
 catch (    Exception e) {
      FMLLog.log(Level.SEVERE,e,"Unable to create connection handler instance %s",mod.connectionHandler().getName());
      throw new FMLNetworkException(e);
    }
    NetworkRegistry.instance().registerConnectionHandler(instance);
  }
}
