{
  isLoading=true;
  loadBlocks();
  loadItems();
  IModel missing=getModel(new ResourceLocation(MODEL_MISSING.getResourceDomain(),MODEL_MISSING.getResourcePath()));
  stateModels.put(MODEL_MISSING,missing);
  textures.remove(TextureMap.LOCATION_MISSING_TEXTURE);
  textures.addAll(LOCATIONS_BUILTIN_TEXTURES);
  textureMap.loadSprites(resourceManager,new IIconCreator(){
    public void registerSprites(    TextureMap map){
      for (      ResourceLocation t : textures) {
        sprites.put(t,map.registerSprite(t));
      }
    }
  }
);
  sprites.put(new ResourceLocation("missingno"),textureMap.getMissingSprite());
  Function<ResourceLocation,TextureAtlasSprite> textureGetter=Functions.forMap(sprites,textureMap.getMissingSprite());
  IFlexibleBakedModel missingBaked=missing.bake(missing.getDefaultState(),Attributes.DEFAULT_BAKED_FORMAT,textureGetter);
  for (  Entry<ModelResourceLocation,IModel> e : stateModels.entrySet()) {
    if (e.getValue() == getMissingModel()) {
      bakedRegistry.putObject(e.getKey(),missingBaked);
    }
 else {
      bakedRegistry.putObject(e.getKey(),e.getValue().bake(e.getValue().getDefaultState(),Attributes.DEFAULT_BAKED_FORMAT,textureGetter));
    }
  }
  return bakedRegistry;
}
