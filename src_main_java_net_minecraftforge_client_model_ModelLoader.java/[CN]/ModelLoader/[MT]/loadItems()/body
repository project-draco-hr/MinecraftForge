{
  registerVariantNames();
  for (  Item item : GameData.getItemRegistry().typeSafeIterable()) {
    for (    String s : (List<String>)getVariantNames(item)) {
      ResourceLocation file=getItemLocation(s);
      ModelResourceLocation memory=getInventoryVariant(s);
      IModel model=null;
      try {
        model=getModel(file);
      }
 catch (      IOException e) {
      }
 finally {
        if (model == null || model == getMissingModel()) {
          FMLLog.fine("Item json isn't found for '" + memory + "', trying to load the variant from the blockstate json");
          try {
            registerVariant(getModelBlockDefinition(memory),memory);
          }
 catch (          Exception exception) {
            FMLLog.getLogger().warn("Unable to load definition " + memory,exception);
          }
        }
 else         stateModels.put(memory,model);
      }
    }
  }
  if (ForgeModContainer.replaceVanillaBucketModel) {
    if (!stateModels.containsKey(ModelDynBucket.LOCATION)) {
      ModelResourceLocation memory=getInventoryVariant("forge:dynbucket");
      registerVariant(getModelBlockDefinition(memory),memory);
    }
    for (    String s : getVariantNames(Items.bucket)) {
      ModelResourceLocation memory=getInventoryVariant(s);
      try {
        IModel model=getModel(new ResourceLocation("forge","item/bucket"));
        stateModels.put(memory,model);
      }
 catch (      IOException e) {
      }
    }
    setBucketModel(Items.water_bucket);
    setBucketModel(Items.lava_bucket);
    if (FluidRegistry.isFluidRegistered("milk")) {
      Fluid milk=FluidRegistry.getFluid("milk");
      FluidStack milkStack=new FluidStack(milk,FluidContainerRegistry.BUCKET_VOLUME);
      if (FluidContainerRegistry.getContainerCapacity(milkStack,new ItemStack(Items.bucket)) == FluidContainerRegistry.BUCKET_VOLUME) {
        setBucketModel(Items.milk_bucket);
      }
    }
 else {
      for (      String s : getVariantNames(Items.milk_bucket)) {
        ModelResourceLocation memory=getInventoryVariant(s);
        try {
          IModel model=getModel(new ResourceLocation("forge","item/bucket_milk"));
          stateModels.put(memory,model);
        }
 catch (        IOException e) {
        }
      }
    }
  }
}
