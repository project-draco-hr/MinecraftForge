{
  if (!Attributes.moreSpecific(format,Attributes.DEFAULT_BAKED_FORMAT)) {
    throw new IllegalArgumentException("can't bake vanilla models to the format that doesn't fit into the default one: " + format);
  }
  ModelBlock model=this.model;
  if (model == null)   return getMissingModel().bake(state,format,bakedTextureGetter);
  ItemCameraTransforms transforms=model.func_181682_g();
  boolean uvlock=false;
  if (state instanceof UVLock) {
    uvlock=true;
    state=((UVLock)state).getParent();
  }
  IPerspectiveState perState=state instanceof IPerspectiveState ? (IPerspectiveState)state : new IPerspectiveState.Impl(state,transforms);
  if (hasItemModel(model)) {
    return new ItemLayerModel(model).bake(perState,format,bakedTextureGetter);
  }
  if (isCustomRenderer(model))   return new IFlexibleBakedModel.Wrapper(new BuiltInModel(transforms),format);
  return bakeNormal(model,perState,state.apply(this),format,bakedTextureGetter,uvlock);
}
