{
  TextureAtlasSprite particle=bakedTextureGetter.apply(new ResourceLocation(model.resolveTextureName("particle")));
  SimpleBakedModel.Builder builder=(new SimpleBakedModel.Builder(model,model.func_187967_g())).setTexture(particle);
  for (int i=0; i < model.getElements().size(); i++) {
    BlockPart part=model.getElements().get(i);
    TRSRTransformation transformation=modelState;
    if (newTransforms.get(i) != null) {
      transformation=transformation.compose(newTransforms.get(i));
      BlockPartRotation rot=part.partRotation;
      if (rot == null)       rot=new BlockPartRotation(new org.lwjgl.util.vector.Vector3f(),EnumFacing.Axis.Y,0,false);
      part=new BlockPart(part.positionFrom,part.positionTo,part.mapFaces,rot,part.shade);
    }
    for (    Map.Entry<EnumFacing,BlockPartFace> e : part.mapFaces.entrySet()) {
      TextureAtlasSprite textureatlassprite1=bakedTextureGetter.apply(new ResourceLocation(model.resolveTextureName(e.getValue().texture)));
      if (e.getValue().cullFace == null || !TRSRTransformation.isInteger(transformation.getMatrix())) {
        builder.addGeneralQuad(makeBakedQuad(part,e.getValue(),textureatlassprite1,e.getKey(),transformation,uvLocked));
      }
 else {
        builder.addFaceQuad(modelState.rotate(e.getValue().cullFace),makeBakedQuad(part,e.getValue(),textureatlassprite1,e.getKey(),transformation,uvLocked));
      }
    }
  }
  return new IPerspectiveAwareModel.MapWrapper(builder.makeBakedModel(),perState){
    @Override public List<BakedQuad> func_188616_a(    IBlockState state,    EnumFacing side,    long rand){
      if (state instanceof IExtendedBlockState) {
        IExtendedBlockState exState=(IExtendedBlockState)state;
        if (exState.getUnlistedNames().contains(Properties.AnimationProperty)) {
          IModelState newState=exState.getValue(Properties.AnimationProperty);
          IExtendedBlockState newExState=exState.withProperty(Properties.AnimationProperty,null);
          if (newState != null) {
            return VanillaModelWrapper.this.bake(new ModelStateComposition(modelState,newState),format,bakedTextureGetter).func_188616_a(newExState,side,rand);
          }
        }
      }
      return super.func_188616_a(state,side,rand);
    }
  }
;
}
