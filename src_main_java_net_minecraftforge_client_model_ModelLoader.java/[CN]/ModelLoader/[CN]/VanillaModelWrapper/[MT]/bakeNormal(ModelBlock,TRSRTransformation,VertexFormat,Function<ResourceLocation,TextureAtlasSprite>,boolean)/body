{
  TextureAtlasSprite particle=bakedTextureGetter.apply(new ResourceLocation(model.resolveTextureName("particle")));
  SimpleBakedModel.Builder builder=(new SimpleBakedModel.Builder(model)).setTexture(particle);
  for (  BlockPart part : (Iterable<BlockPart>)model.getElements()) {
    for (    Map.Entry<EnumFacing,BlockPartFace> e : (Iterable<Map.Entry<EnumFacing,BlockPartFace>>)part.mapFaces.entrySet()) {
      TextureAtlasSprite textureatlassprite1=bakedTextureGetter.apply(new ResourceLocation(model.resolveTextureName(e.getValue().texture)));
      if (e.getValue().cullFace == null || !TRSRTransformation.isInteger(state.getMatrix())) {
        builder.addGeneralQuad(makeBakedQuad(part,e.getValue(),textureatlassprite1,e.getKey(),state,uvLocked));
      }
 else {
        builder.addFaceQuad(state.rotate(e.getValue().cullFace),makeBakedQuad(part,e.getValue(),textureatlassprite1,e.getKey(),state,uvLocked));
      }
    }
  }
  return new IFlexibleBakedModel.Wrapper(builder.makeBakedModel(),format);
}
