{
  modGraph=new DirectedGraph<ModContainer>();
  modGraph.addNode(beforeAll);
  modGraph.addNode(before);
  modGraph.addNode(afterAll);
  modGraph.addNode(after);
  modGraph.addEdge(before,after);
  modGraph.addEdge(beforeAll,before);
  modGraph.addEdge(after,afterAll);
  for (  ModContainer mod : modList) {
    modGraph.addNode(mod);
  }
  for (  ModContainer mod : modList) {
    boolean preDepAdded=false;
    boolean postDepAdded=false;
    for (    String dep : mod.getPreDepends()) {
      preDepAdded=true;
      if (dep.equals("*")) {
        modGraph.addEdge(mod,afterAll);
        modGraph.addEdge(after,mod);
        postDepAdded=true;
      }
 else {
        modGraph.addEdge(before,mod);
        if (nameLookup.containsKey(dep)) {
          modGraph.addEdge(nameLookup.get(dep),mod);
        }
      }
    }
    for (    String dep : mod.getPostDepends()) {
      postDepAdded=true;
      if (dep.equals("*")) {
        modGraph.addEdge(beforeAll,mod);
        modGraph.addEdge(mod,before);
        preDepAdded=true;
      }
 else {
        modGraph.addEdge(mod,after);
        if (nameLookup.containsKey(dep)) {
          modGraph.addEdge(mod,nameLookup.get(dep));
        }
      }
    }
    if (!preDepAdded) {
      modGraph.addEdge(before,mod);
    }
    if (!postDepAdded) {
      modGraph.addEdge(mod,after);
    }
  }
}
