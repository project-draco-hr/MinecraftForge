{
  Keyboard.enableRepeatEvents(true);
  if (this.entryList == null || this.needsRefresh) {
    this.entryList=new GuiConfigEntries(this,mc);
    this.needsRefresh=false;
  }
  int undoGlyphWidth=mc.fontRendererObj.getStringWidth(UNDO_CHAR) * 2;
  int resetGlyphWidth=mc.fontRendererObj.getStringWidth(RESET_CHAR) * 2;
  int doneWidth=Math.max(mc.fontRendererObj.getStringWidth(I18n.format("gui.done")) + 20,100);
  int undoWidth=mc.fontRendererObj.getStringWidth(" " + I18n.format("fml.configgui.tooltip.undoChanges")) + undoGlyphWidth + 20;
  int resetWidth=mc.fontRendererObj.getStringWidth(" " + I18n.format("fml.configgui.tooltip.resetToDefault")) + resetGlyphWidth + 20;
  int checkWidth=mc.fontRendererObj.getStringWidth(I18n.format("fml.configgui.applyGlobally")) + 13;
  int buttonWidthHalf=(doneWidth + 5 + undoWidth+ 5+ resetWidth+ 5+ checkWidth) / 2;
  this.buttonList.add(new GuiButtonExt(2000,this.width / 2 - buttonWidthHalf,this.height - 29,doneWidth,20,I18n.format("gui.done")));
  this.buttonList.add(this.btnDefaultAll=new GuiUnicodeGlyphButton(2001,this.width / 2 - buttonWidthHalf + doneWidth + 5 + undoWidth + 5,this.height - 29,resetWidth,20," " + I18n.format("fml.configgui.tooltip.resetToDefault"),RESET_CHAR,2.0F));
  this.buttonList.add(btnUndoAll=new GuiUnicodeGlyphButton(2002,this.width / 2 - buttonWidthHalf + doneWidth + 5,this.height - 29,undoWidth,20," " + I18n.format("fml.configgui.tooltip.undoChanges"),UNDO_CHAR,2.0F));
  this.buttonList.add(chkApplyGlobally=new GuiCheckBox(2003,this.width / 2 - buttonWidthHalf + doneWidth + 5 + undoWidth + 5 + resetWidth + 5,this.height - 24,I18n.format("fml.configgui.applyGlobally"),false));
  this.undoHoverChecker=new HoverChecker(this.btnUndoAll,800);
  this.resetHoverChecker=new HoverChecker(this.btnDefaultAll,800);
  this.checkBoxHoverChecker=new HoverChecker(chkApplyGlobally,800);
  this.entryList.initGui();
}
