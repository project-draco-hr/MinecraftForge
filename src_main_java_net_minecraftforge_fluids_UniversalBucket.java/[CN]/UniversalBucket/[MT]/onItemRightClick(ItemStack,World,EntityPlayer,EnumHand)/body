{
  FluidStack fluidStack=getFluid(itemstack);
  if (fluidStack == null) {
    return ActionResult.newResult(EnumActionResult.PASS,itemstack);
  }
  RayTraceResult mop=this.rayTrace(world,player,false);
  if (mop == null || mop.typeOfHit != RayTraceResult.Type.BLOCK) {
    return ActionResult.newResult(EnumActionResult.PASS,itemstack);
  }
  BlockPos clickPos=mop.getBlockPos();
  if (world.isBlockModifiable(player,clickPos)) {
    BlockPos targetPos=clickPos.offset(mop.sideHit);
    if (player.canPlayerEdit(targetPos,mop.sideHit,itemstack)) {
      if (this.tryPlaceFluid(player,player.getEntityWorld(),fluidStack.getFluid().getBlock(),targetPos) && !player.capabilities.isCreativeMode) {
        player.addStat(StatList.getObjectUseStats(this));
        itemstack.stackSize--;
        ItemStack emptyStack=getEmpty() != null ? getEmpty().copy() : new ItemStack(this);
        if (itemstack.stackSize <= 0) {
          return ActionResult.newResult(EnumActionResult.SUCCESS,emptyStack);
        }
 else {
          ItemHandlerHelper.giveItemToPlayer(player,emptyStack);
          return ActionResult.newResult(EnumActionResult.SUCCESS,itemstack);
        }
      }
    }
  }
  return ActionResult.newResult(EnumActionResult.FAIL,itemstack);
}
