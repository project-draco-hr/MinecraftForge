{
  FMLRelaunchLog.fine("Discovering coremods");
  File coreMods=setupCoreModDir(mcDir);
  FilenameFilter ff=new FilenameFilter(){
    @Override public boolean accept(    File dir,    String name){
      return name.endsWith(".jar");
    }
  }
;
  File[] coreModList=coreMods.listFiles(ff);
  File versionedModDir=new File(coreMods,FMLInjectionData.mccversion);
  if (versionedModDir.isDirectory()) {
    File[] versionedCoreMods=versionedModDir.listFiles(ff);
    coreModList=ObjectArrays.concat(coreModList,versionedCoreMods,File.class);
  }
  Arrays.sort(coreModList);
  for (  File coreMod : coreModList) {
    FMLRelaunchLog.fine("Examining for coremod candidacy %s",coreMod.getName());
    JarFile jar=null;
    Attributes mfAttributes;
    try {
      jar=new JarFile(coreMod);
      if (jar.getManifest() == null) {
        continue;
      }
      mfAttributes=jar.getManifest().getMainAttributes();
    }
 catch (    IOException ioe) {
      FMLRelaunchLog.log(Level.SEVERE,ioe,"Unable to read the jar file %s - ignoring",coreMod.getName());
      continue;
    }
 finally {
      if (jar != null) {
        try {
          jar.close();
        }
 catch (        IOException e) {
        }
      }
    }
    String cascadedTweaker=mfAttributes.getValue("TweakClass");
    if (cascadedTweaker != null) {
      FMLRelaunchLog.info("Loading tweaker %s from %s",cascadedTweaker,coreMod.getName());
      Integer sortOrder=Ints.tryParse(Strings.nullToEmpty(mfAttributes.getValue("TweakOrder")));
      sortOrder=(sortOrder == null ? Integer.valueOf(0) : sortOrder);
      handleCascadingTweak(coreMod,jar,cascadedTweaker,classLoader,sortOrder);
      loadedCoremods.add(coreMod.getName());
      continue;
    }
    String fmlCorePlugin=mfAttributes.getValue("FMLCorePlugin");
    if (fmlCorePlugin == null) {
      FMLRelaunchLog.fine("Not found coremod data in %s",coreMod.getName());
      continue;
    }
    try {
      classLoader.addURL(coreMod.toURI().toURL());
      if (!mfAttributes.containsKey(COREMODCONTAINSFMLMOD)) {
        FMLRelaunchLog.finest("Adding %s to the list of known coremods, it will not be examined again",coreMod.getName());
        loadedCoremods.add(coreMod.getName());
      }
 else {
        FMLRelaunchLog.finest("Found FMLCorePluginContainsFMLMod marker in %s, it will be examined later for regular @Mod instances",coreMod.getName());
        reparsedCoremods.add(coreMod.getName());
      }
    }
 catch (    MalformedURLException e) {
      FMLRelaunchLog.log(Level.SEVERE,e,"Unable to convert file into a URL. weird");
      continue;
    }
    loadCoreMod(classLoader,fmlCorePlugin,coreMod);
  }
}
