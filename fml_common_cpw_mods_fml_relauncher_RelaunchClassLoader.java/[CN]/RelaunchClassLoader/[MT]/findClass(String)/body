{
  for (  String st : excludedPackages) {
    if (name.startsWith(st)) {
      return parent.loadClass(name);
    }
  }
  if (cachedClasses.containsKey(name)) {
    return cachedClasses.get(name);
  }
  for (  String st : transformerExclusions) {
    if (name.startsWith(st)) {
      Class<?> cl=super.findClass(name);
      cachedClasses.put(name,cl);
      return cl;
    }
  }
  try {
    byte[] basicClass=getClassBytes(name);
    byte[] transformedClass=runTransformers(name,basicClass);
    Class<?> cl=defineClass(name,transformedClass,0,transformedClass.length);
    cachedClasses.put(name,cl);
    return cl;
  }
 catch (  Throwable e) {
    throw new ClassNotFoundException(name,e);
  }
}
