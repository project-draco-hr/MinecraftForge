{
  float startAlpha=(float)(startColor >> 24 & 255) / 255.0F;
  float startRed=(float)(startColor >> 16 & 255) / 255.0F;
  float startGreen=(float)(startColor >> 8 & 255) / 255.0F;
  float startBlue=(float)(startColor & 255) / 255.0F;
  float endAlpha=(float)(endColor >> 24 & 255) / 255.0F;
  float endRed=(float)(endColor >> 16 & 255) / 255.0F;
  float endGreen=(float)(endColor >> 8 & 255) / 255.0F;
  float endBlue=(float)(endColor & 255) / 255.0F;
  GlStateManager.disableTexture2D();
  GlStateManager.enableBlend();
  GlStateManager.disableAlpha();
  GlStateManager.tryBlendFuncSeparate(770,771,1,0);
  GlStateManager.shadeModel(7425);
  Tessellator tessellator=Tessellator.getInstance();
  WorldRenderer worldrenderer=tessellator.getWorldRenderer();
  worldrenderer.begin(7,DefaultVertexFormats.POSITION_COLOR);
  worldrenderer.pos(right,top,zLevel).color(startRed,startGreen,startBlue,startAlpha).endVertex();
  worldrenderer.pos(left,top,zLevel).color(startRed,startGreen,startBlue,startAlpha).endVertex();
  worldrenderer.pos(left,bottom,zLevel).color(endRed,endGreen,endBlue,endAlpha).endVertex();
  worldrenderer.pos(right,bottom,zLevel).color(endRed,endGreen,endBlue,endAlpha).endVertex();
  tessellator.draw();
  GlStateManager.shadeModel(7424);
  GlStateManager.disableBlend();
  GlStateManager.enableAlpha();
  GlStateManager.enableTexture2D();
}
