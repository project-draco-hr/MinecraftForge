{
  GL11.glBindTexture(GL11.GL_TEXTURE_2D,textureId);
  GL11.glPixelStorei(GL11.GL_PACK_ALIGNMENT,1);
  GL11.glPixelStorei(GL11.GL_UNPACK_ALIGNMENT,1);
  for (int level=0; level <= mipmapLevels; level++) {
    int width=GL11.glGetTexLevelParameteri(GL11.GL_TEXTURE_2D,level,GL11.GL_TEXTURE_WIDTH);
    int height=GL11.glGetTexLevelParameteri(GL11.GL_TEXTURE_2D,level,GL11.GL_TEXTURE_HEIGHT);
    int size=width * height;
    BufferedImage bufferedimage=new BufferedImage(width,height,2);
    File output=new File("texture_atlas_dump_" + name + "_mipmap_"+ level+ ".png");
    IntBuffer buffer=BufferUtils.createIntBuffer(size);
    int[] data=new int[size];
    GL11.glGetTexImage(GL11.GL_TEXTURE_2D,level,GL12.GL_BGRA,GL12.GL_UNSIGNED_INT_8_8_8_8_REV,buffer);
    buffer.get(data);
    bufferedimage.setRGB(0,0,width,height,data,0,width);
    try {
      ImageIO.write(bufferedimage,"png",output);
      FMLLog.info("[TextureDump] Exported png to: %s",output.getAbsolutePath());
    }
 catch (    IOException ioexception) {
      FMLLog.info("[TextureDump] Unable to write: ",ioexception);
    }
  }
}
