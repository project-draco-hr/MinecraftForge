{
  super.updateScreen();
  search.updateCursorCounter();
  if (!search.getText().equals(lastFilterText)) {
    reloadMods();
    sorted=false;
  }
  if (!sorted) {
switch (sortType) {
case A_TO_Z:
      Collections.sort(modList.getMods(),new Comparator<ModContainer>(){
        @Override public int compare(        ModContainer o1,        ModContainer o2){
          return o1.getName().toLowerCase().compareTo(o2.getName().toLowerCase());
        }
      }
);
    break;
case Z_TO_A:
  Collections.sort(modList.getMods(),new Comparator<ModContainer>(){
    @Override public int compare(    ModContainer o1,    ModContainer o2){
      return o2.getName().toLowerCase().compareTo(o1.getName().toLowerCase());
    }
  }
);
break;
default :
reloadMods();
break;
}
mods=modList.getMods();
selected=modList.selectedIndex=mods.indexOf(selectedMod);
sorted=true;
}
}
