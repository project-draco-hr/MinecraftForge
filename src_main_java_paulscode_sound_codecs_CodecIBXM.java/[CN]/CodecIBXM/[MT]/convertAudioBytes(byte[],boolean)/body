{
  ByteBuffer dest=ByteBuffer.allocateDirect(audio_bytes.length);
  dest.order(ByteOrder.nativeOrder());
  ByteBuffer src=ByteBuffer.wrap(audio_bytes);
  src.order(ByteOrder.LITTLE_ENDIAN);
  if (two_bytes_data) {
    ShortBuffer dest_short=dest.asShortBuffer();
    ShortBuffer src_short=src.asShortBuffer();
    while (src_short.hasRemaining()) {
      dest_short.put(src_short.get());
    }
  }
 else {
    while (src.hasRemaining()) {
      dest.put(src.get());
    }
  }
  dest.rewind();
  if (!dest.hasArray()) {
    byte[] arrayBackedBuffer=new byte[dest.capacity()];
    dest.get(arrayBackedBuffer);
    dest.clear();
    return arrayBackedBuffer;
  }
  return dest.array();
}
