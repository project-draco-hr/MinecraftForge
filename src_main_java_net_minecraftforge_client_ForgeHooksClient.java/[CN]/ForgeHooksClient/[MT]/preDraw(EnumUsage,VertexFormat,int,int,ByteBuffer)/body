{
  VertexFormatElement attr=format.getElement(element);
  int count=attr.getElementCount();
  int constant=attr.getType().getGlConstant();
  buffer.position(format.getOffset(element));
switch (attrType) {
case POSITION:
    glVertexPointer(count,constant,stride,buffer);
  glEnableClientState(GL_VERTEX_ARRAY);
break;
case NORMAL:
if (count != 3) {
throw new IllegalArgumentException("Normal attribute should have the size 3: " + attr);
}
glNormalPointer(constant,stride,buffer);
glEnableClientState(GL_NORMAL_ARRAY);
break;
case COLOR:
glColorPointer(count,constant,stride,buffer);
glEnableClientState(GL_COLOR_ARRAY);
break;
case UV:
OpenGlHelper.setClientActiveTexture(OpenGlHelper.defaultTexUnit + attr.getIndex());
glTexCoordPointer(count,constant,stride,buffer);
glEnableClientState(GL_TEXTURE_COORD_ARRAY);
OpenGlHelper.setClientActiveTexture(OpenGlHelper.defaultTexUnit);
break;
case PADDING:
break;
case GENERIC:
glEnableVertexAttribArray(attr.getIndex());
glVertexAttribPointer(attr.getIndex(),count,constant,false,stride,buffer);
default :
FMLLog.severe("Unimplemented vanilla attribute upload: %s",attrType.getDisplayName());
}
}
