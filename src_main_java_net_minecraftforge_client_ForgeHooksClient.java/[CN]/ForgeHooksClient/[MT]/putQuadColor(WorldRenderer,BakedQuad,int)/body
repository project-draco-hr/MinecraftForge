{
  float cr=color & 0xFF;
  float cg=(color >>> 8) & 0xFF;
  float cb=(color >>> 16) & 0xFF;
  float ca=(color >>> 24) & 0xFF;
  for (int i=0; i < 4; i++) {
    int vc=quad.getVertexData()[3 + 7 * i];
    float vcr=vc & 0xFF;
    float vcg=(vc >>> 8) & 0xFF;
    float vcb=(vc >>> 16) & 0xFF;
    float vca=(vc >>> 24) & 0xFF;
    int ncr=Math.min(0xFF,(int)(cr * vcr / 0xFF));
    int ncg=Math.min(0xFF,(int)(cg * vcg / 0xFF));
    int ncb=Math.min(0xFF,(int)(cb * vcb / 0xFF));
    int nca=Math.min(0xFF,(int)(ca * vca / 0xFF));
    renderer.putColorRGBA(renderer.getColorIndex(i + 1),ncr,ncg,ncb,nca);
  }
}
