{
  buffer.position(attr.getOffset());
switch (attrType) {
case POSITION:
    glVertexPointer(attr.getElementCount(),attr.getType().getGlConstant(),stride,buffer);
  glEnableClientState(GL_VERTEX_ARRAY);
break;
case NORMAL:
if (attr.getElementCount() != 3) {
throw new IllegalArgumentException("Normal attribute should have the size 3: " + attr);
}
glNormalPointer(attr.getType().getGlConstant(),stride,buffer);
glEnableClientState(GL_NORMAL_ARRAY);
break;
case COLOR:
glColorPointer(attr.getElementCount(),attr.getType().getGlConstant(),stride,buffer);
glEnableClientState(GL_COLOR_ARRAY);
break;
case UV:
OpenGlHelper.setClientActiveTexture(OpenGlHelper.defaultTexUnit + attr.getIndex());
glTexCoordPointer(attr.getElementCount(),attr.getType().getGlConstant(),stride,buffer);
glEnableClientState(GL_TEXTURE_COORD_ARRAY);
OpenGlHelper.setClientActiveTexture(OpenGlHelper.defaultTexUnit);
break;
case PADDING:
break;
case GENERIC:
glEnableVertexAttribArray(attr.getIndex());
glVertexAttribPointer(attr.getIndex(),attr.getElementCount(),attr.getType().getGlConstant(),false,stride,buffer);
default :
FMLLog.severe("Unimplemented vanilla attribute upload: %s",attrType.getDisplayName());
}
}
