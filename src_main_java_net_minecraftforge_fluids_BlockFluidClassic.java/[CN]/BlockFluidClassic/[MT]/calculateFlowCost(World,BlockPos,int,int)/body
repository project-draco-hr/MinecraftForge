{
  int cost=1000;
  for (int adjSide=0; adjSide < 4; adjSide++) {
    if ((adjSide == 0 && side == 1) || (adjSide == 1 && side == 0) || (adjSide == 2 && side == 3)|| (adjSide == 3 && side == 2)) {
      continue;
    }
    BlockPos pos2=pos;
switch (adjSide) {
case 0:
      pos2=pos2.add(-1,0,0);
    break;
case 1:
  pos2=pos2.add(1,0,0);
break;
case 2:
pos2=pos2.add(0,0,-1);
break;
case 3:
pos2=pos2.add(0,0,1);
break;
}
if (!canFlowInto(world,pos2) || isSourceBlock(world,pos2)) {
continue;
}
if (canFlowInto(world,pos2.add(0,densityDir,0))) {
return recurseDepth;
}
if (recurseDepth >= 4) {
continue;
}
int min=calculateFlowCost(world,pos2,recurseDepth + 1,adjSide);
if (min < cost) {
cost=min;
}
}
return cost;
}
