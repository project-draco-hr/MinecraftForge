{
  final boolean warn=!(clsName.equals("net/minecraft/client/Minecraft") || clsName.equals("net/minecraft/server/dedicated/DedicatedServer") || clsName.equals("cpw/mods/fml/common/FMLCommonHandler")|| clsName.startsWith("com/jcraft/jogg/")|| clsName.startsWith("scala/sys/"));
  return new MethodVisitor(Opcodes.ASM4,super.visitMethod(mAccess,mName,mDesc,mSignature,mExceptions)){
    @Override public void visitMethodInsn(    int opcode,    String owner,    String name,    String desc,    boolean isIntf){
      if (opcode == Opcodes.INVOKESTATIC && owner.equals("java/lang/System") && name.equals("exit") && desc.equals("(I)V")) {
        if (warn) {
          FMLRelaunchLog.warning("=============================================================");
          FMLRelaunchLog.warning("MOD HAS DIRECT REFERENCE System.exit() THIS IS NOT ALLOWED REROUTING TO FML!");
          FMLRelaunchLog.warning("Offendor: %s.%s%s",ExitVisitor.this.clsName,mName,mDesc);
          FMLRelaunchLog.warning("Use FMLCommonHandler.exitJava instead");
          FMLRelaunchLog.warning("=============================================================");
        }
        owner=ExitVisitor.callbackOwner;
        name="systemExitCalled";
      }
 else       if (opcode == Opcodes.INVOKEVIRTUAL && owner.equals("java/lang/Runtime") && name.equals("exit") && desc.equals("(I)V")) {
        if (warn) {
          FMLRelaunchLog.warning("=============================================================");
          FMLRelaunchLog.warning("MOD HAS DIRECT REFERENCE Runtime.exit() THIS IS NOT ALLOWED REROUTING TO FML!");
          FMLRelaunchLog.warning("Offendor: %s.%s%s",ExitVisitor.this.clsName,mName,mDesc);
          FMLRelaunchLog.warning("Use FMLCommonHandler.exitJava instead");
          FMLRelaunchLog.warning("=============================================================");
        }
        opcode=Opcodes.INVOKESTATIC;
        owner=ExitVisitor.callbackOwner;
        name="runtimeExitCalled";
        desc="(Ljava/lang/Runtime;I)V";
      }
 else       if (opcode == Opcodes.INVOKEVIRTUAL && owner.equals("java/lang/Runtime") && name.equals("halt") && desc.equals("(I)V")) {
        if (warn) {
          FMLRelaunchLog.warning("=============================================================");
          FMLRelaunchLog.warning("MOD HAS DIRECT REFERENCE Runtime.halt() THIS IS NOT ALLOWED REROUTING TO FML!");
          FMLRelaunchLog.warning("Offendor: %s.%s%s",ExitVisitor.this.clsName,mName,mDesc);
          FMLRelaunchLog.warning("Use FMLCommonHandler.exitJava instead");
          FMLRelaunchLog.warning("=============================================================");
        }
        opcode=Opcodes.INVOKESTATIC;
        owner=ExitVisitor.callbackOwner;
        name="runtimeHaltCalled";
        desc="(Ljava/lang/Runtime;I)V";
      }
      super.visitMethodInsn(opcode,owner,name,desc,isIntf);
    }
  }
;
}
