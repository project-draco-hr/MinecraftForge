{
  TRSRTransformation ret=TRSRTransformation.identity();
  Key key=null;
  if (animation != null)   key=animation.getKeys().get(frame,node);
 else   if (node.getAnimation() != null && node.getAnimation() != animation)   key=node.getAnimation().getKeys().get(frame,node);
  if (key != null) {
    Node<?> parent=node.getParent();
    if (parent != null) {
      TRSRTransformation pm=cache.getUnchecked(Triple.<Animation,Node<?>,Integer>of(animation,node.getParent(),frame));
      ret=ret.compose(pm);
      ret=ret.compose(new TRSRTransformation(parent.getPos(),parent.getRot(),parent.getScale(),null));
    }
    ret=ret.compose(new TRSRTransformation(key.getPos(),key.getRot(),key.getScale(),null));
    TRSRTransformation invBind=new NodeJoint(node).getInvBindPose();
    ret=ret.compose(invBind);
  }
 else {
    Node<?> parent=node.getParent();
    if (parent != null) {
      TRSRTransformation pm=cache.getUnchecked(Triple.<Animation,Node<?>,Integer>of(animation,node.getParent(),frame));
      ret=ret.compose(pm);
      ret=ret.compose(new TRSRTransformation(parent.getPos(),parent.getRot(),parent.getScale(),null));
    }
    ret=ret.compose(new TRSRTransformation(node.getPos(),node.getRot(),node.getScale(),null));
    TRSRTransformation invBind=new NodeJoint(node).getInvBindPose();
    ret=ret.compose(invBind);
  }
  return ret;
}
