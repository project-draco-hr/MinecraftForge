def setup_fml(fml_dir, mcp_dir):
    sys.path.append(mcp_dir)
    from runtime.decompile import decompile
    from runtime.updatemd5 import updatemd5
    from runtime.cleanup import cleanup
    src_dir = os.path.join(mcp_dir, 'src')
    if os.path.isdir(src_dir):
        os.chdir(mcp_dir)
        cleanup(None, False)
        reset_logger()
        os.chdir(fml_dir)
    if os.path.isdir(src_dir):
        print 'Please make sure to backup your modified files, and say yes when it asks you to do cleanup.'
        sys.exit(1)
    if (not download_deps(mcp_dir)):
        sys.exit(1)
    try:
        pre_decompile(mcp_dir, fml_dir)
        os.chdir(mcp_dir)
        decompile(None, False, False, True, True, False, True, False, False, False, False)
        reset_logger()
        os.chdir(fml_dir)
        post_decompile(mcp_dir, fml_dir)
    except SystemExit as e:
        print ('Decompile Exception: %d ' % e.code)
        raise e
    if (not os.path.isdir(src_dir)):
        print ('Something went wrong, src folder not found at: %s' % src_dir)
        sys.exit(1)
    cleanup_source(src_dir)
    has_client = os.path.isdir(os.path.join(mcp_dir, 'src', 'minecraft'))
    has_server = os.path.isdir(os.path.join(mcp_dir, 'src', 'minecraft_server'))
    print 'Applying Forge ModLoader patches'
    if has_client:
        if os.path.isdir(os.path.join(fml_dir, 'patches', 'minecraft')):
            apply_patches(mcp_dir, os.path.join(fml_dir, 'patches', 'minecraft'), src_dir)
        if os.path.isdir(os.path.join(fml_dir, 'src', 'minecraft')):
            copytree(os.path.join(fml_dir, 'src', 'minecraft'), os.path.join(src_dir, 'minecraft'))
        shutil.rmtree(os.path.join(src_dir, 'minecraft', 'argo'))
    if has_server:
        if os.path.isdir(os.path.join(fml_dir, 'patches', 'minecraft_server')):
            apply_patches(mcp_dir, os.path.join(fml_dir, 'patches', 'minecraft_server'), src_dir)
        if os.path.isdir(os.path.join(fml_dir, 'src', 'minecraft_server')):
            copytree(os.path.join(fml_dir, 'src', 'minecraft_server'), os.path.join(src_dir, 'minecraft_server'))
    os.chdir(mcp_dir)
    updatemd5(None, True)
    reset_logger()
    os.chdir(fml_dir)
    print 'Fixing MCP Workspace'
    merge_tree(os.path.join(fml_dir, 'eclipse'), os.path.join(mcp_dir, 'eclipse'))
