def apply_fml_patches(fml_dir, mcp_dir, src_dir, copy_files=True):
    sys.path.append(mcp_dir)
    from runtime.updatemd5 import updatemd5
    has_client = os.path.isdir(os.path.join(src_dir, 'minecraft'))
    has_server = os.path.isdir(os.path.join(src_dir, 'minecraft_server'))
    print 'Applying Forge ModLoader patches'
    sys.stdout.flush()
    if has_client:
        if os.path.isdir(os.path.join(fml_dir, 'patches', 'minecraft')):
            apply_patches(mcp_dir, os.path.join(fml_dir, 'patches', 'minecraft'), src_dir)
        if os.path.isdir(os.path.join(fml_dir, 'patches', 'common')):
            apply_patches(mcp_dir, os.path.join(fml_dir, 'patches', 'common'), src_dir, '/common/', '/minecraft/')
        if (copy_files and os.path.isdir(os.path.join(fml_dir, 'client'))):
            copytree(os.path.join(fml_dir, 'client'), os.path.join(src_dir, 'minecraft'))
        if os.path.isdir(os.path.join(src_dir, 'minecraft', 'argo')):
            shutil.rmtree(os.path.join(src_dir, 'minecraft', 'argo'))
    if has_server:
        if os.path.isdir(os.path.join(fml_dir, 'patches', 'minecraft_server')):
            apply_patches(mcp_dir, os.path.join(fml_dir, 'patches', 'minecraft_server'), src_dir)
        if os.path.isdir(os.path.join(fml_dir, 'patches', 'common')):
            apply_patches(mcp_dir, os.path.join(fml_dir, 'patches', 'common'), src_dir, '/common/', '/minecraft_server/')
        if (copy_files and os.path.isdir(os.path.join(fml_dir, 'server'))):
            copytree(os.path.join(fml_dir, 'server'), os.path.join(src_dir, 'minecraft_server'))
    if os.path.isdir(os.path.join(fml_dir, 'patches', 'common')):
        apply_patches(mcp_dir, os.path.join(fml_dir, 'patches', 'common'), src_dir)
    if (copy_files and os.path.isdir(os.path.join(fml_dir, 'common'))):
        copytree(os.path.join(fml_dir, 'common'), os.path.join(src_dir, 'common'))
