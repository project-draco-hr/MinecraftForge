def apply_ats(fml_dir, mcp_dir, class_path, target, disable_at=False, commands=None):

    def log(msg):
        if (commands is None):
            print msg
        else:
            commands.logger.info(msg)
    cmds = find_java()
    if (cmds is None):
        log('>Could not run Access Transformer, Java not found!')
        sys.exit(1)
    if (not disable_at):
        log('> Running AccessTransformer')
        forkcmd = ('"%s" -classpath "{classpath}" cpw.mods.fml.common.asm.transformers.AccessTransformer "{jar}" "{fmlconfig}"' % cmds['java']).format(classpath=class_path, jar=target, fmlconfig=os.path.join(fml_dir, 'common', 'fml_at.cfg'))
        forge_cfg = os.path.join(fml_dir, '..', 'common', 'forge_at.cfg')
        if os.path.isfile(forge_cfg):
            log('    Forge config detected')
            forkcmd += (' "%s"' % forge_cfg)
        for (dirname, dirnames, filenames) in os.walk(os.path.join(fml_dir, '..', 'accesstransformers')):
            for filename in filenames:
                accesstransformer = os.path.join(dirname, filename)
                if os.path.isfile(accesstransformer):
                    log(('    Access Transformer "%s" detected' % filename))
                    forkcmd += (' "%s"' % accesstransformer)
        if (not runcmd(forkcmd, echo=False, commands=commands)):
            sys.exit(1)
    else:
        log('> Access Transformer disabled')
