def apply_patches(mcp_dir, patch_dir, target_dir):
    sys.path.append(mcp_dir)
    from runtime.pylibs.normlines import normaliselines
    from runtime.commands import cmdsplit
    temp = os.path.abspath('temp.patch')
    cmd = cmdsplit(('patch -p2 -i "%s" ' % temp))
    display = True
    if (os.name == 'nt'):
        applydiff = os.path.abspath(os.path.join(mcp_dir, 'runtime', 'bin', 'applydiff.exe'))
        cmd = cmdsplit(('"%s" -uf -p2 -i "%s"' % (applydiff, temp)))
        display = False
    for (path, _, filelist) in os.walk(patch_dir, followlinks=True):
        for cur_file in fnmatch.filter(filelist, '*.patch'):
            patch_file = os.path.normpath(os.path.join(patch_dir, path[(len(patch_dir) + 1):], cur_file))
            if display:
                print ('patching file %s' % os.path.join(path[(len(patch_dir) + 1):], cur_file))
            normaliselines(patch_file, temp)
            process = subprocess.Popen(cmd, cwd=target_dir, bufsize=(-1))
            process.communicate()
    if os.path.isfile(temp):
        os.remove(temp)
