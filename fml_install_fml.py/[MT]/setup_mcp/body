def setup_mcp(fml_dir, mcp_dir, gen_conf=True):
    print 'Setting up MCP'
    runtime = os.path.join(mcp_dir, 'runtime', 'commands.py')
    file_backup(runtime)
    patch = os.path.join(fml_dir, 'commands.patch')
    if (not os.path.isfile(patch)):
        raise Exception(('Commands.py patch not found %s' % patch))
        return
    print 'Patching commands.py'
    apply_patch(patch, runtime, mcp_dir=mcp_dir)
    try:
        sys.path.append(mcp_dir)
        from runtime.commands import commands_sanity_check
        commands_sanity_check()
    except ImportError as ex:
        print 'Could not verify commands.py patch integrity, this typically means that you are not in a clean MCP environment.'
        print ('Download a clean version of MCP %s and try again' % mcp_version)
        print ex
        sys.exit(1)
    mcp_conf = os.path.join(mcp_dir, 'conf')
    mcp_conf_bak = os.path.join(mcp_dir, 'conf.bak')
    fml_conf = os.path.join(fml_dir, 'conf')
    if gen_conf:
        if os.path.isdir(mcp_conf_bak):
            print 'Reverting old conf backup folder'
            shutil.rmtree(mcp_conf)
            os.rename(mcp_conf_bak, mcp_conf)
        create_merged_conf(mcp_dir, fml_dir)
        print 'Backing up MCP Conf'
        os.rename(mcp_conf, mcp_conf_bak)
    else:
        shutil.rmtree(mcp_conf)
    print 'Copying FML conf'
    shutil.copytree(fml_conf, mcp_conf)
    create_renamed_conf(mcp_dir, fml_dir)
    if (not os.path.isfile(os.path.join(fml_dir, 'fmlbuild.properties-sample'))):
        mcp_eclipse = os.path.join(mcp_dir, 'eclipse')
        if (os.path.isdir(os.path.join(mcp_eclipse, 'Client')) and os.path.isdir(os.path.join(mcp_eclipse, 'Server'))):
            shutil.rmtree(mcp_eclipse)
        if ((not os.path.isdir(mcp_eclipse)) and os.path.isdir(os.path.join(fml_dir, 'eclipse'))):
            print 'Fixing MCP Workspace'
            copytree(os.path.join(fml_dir, 'eclipse'), mcp_eclipse)
