{
  super(defaultKey);
  this.superType=type;
  this.optionalDefaultKey=defaultKey;
  this.maxId=maxIdValue;
  this.minId=minIdValue;
  this.availabilityMap=new BitSet(maxIdValue + 1);
  this.isDelegated=isDelegated;
  if (this.isDelegated) {
    try {
      this.delegateAccessor=type.getField("delegate");
    }
 catch (    NoSuchFieldException e) {
      FMLLog.log(Level.ERROR,e,"Delegate class identified with missing delegate field");
      throw Throwables.propagate(e);
    }
  }
 else {
    this.delegateAccessor=null;
  }
  this.addCallback=callback;
}
