{
  if (this.superType != otherRegistry.superType) {
    throw new IllegalArgumentException("incompatible registry");
  }
  this.optionalDefaultKey=otherRegistry.optionalDefaultKey;
  this.maxId=otherRegistry.maxId;
  this.minId=otherRegistry.minId;
  this.aliases.clear();
  this.aliases.putAll(otherRegistry.aliases);
  this.persistentSubstitutions.clear();
  this.persistentSubstitutions.putAll(otherRegistry.getPersistentSubstitutions());
  this.activeSubstitutions.clear();
  this.dummiedLocations.clear();
  this.dummiedLocations.addAll(otherRegistry.dummiedLocations);
  underlyingIntegerMap=new ObjectIntIdentityMap<I>();
  registryObjects.clear();
  for (  I thing : otherRegistry.typeSafeIterable()) {
    addObjectRaw(otherRegistry.getId(thing),otherRegistry.getNameForObject(thing),thing);
  }
  this.activeSubstitutions.putAll(otherRegistry.activeSubstitutions);
}
