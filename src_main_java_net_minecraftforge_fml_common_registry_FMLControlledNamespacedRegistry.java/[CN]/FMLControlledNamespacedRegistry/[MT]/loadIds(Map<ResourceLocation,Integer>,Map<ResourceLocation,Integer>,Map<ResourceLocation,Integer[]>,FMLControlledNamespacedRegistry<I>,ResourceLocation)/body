{
  for (  Map.Entry<ResourceLocation,Integer> entry : ids.entrySet()) {
    ResourceLocation itemName=entry.getKey();
    int newId=entry.getValue();
    int currId=currentRegistry.getId(itemName);
    if (currId == -1) {
      FMLLog.info("Found a missing id from the world %s",itemName);
      missingIds.put(entry.getKey(),newId);
      continue;
    }
 else     if (currId != newId) {
      FMLLog.fine("Fixed %s id mismatch %s: %d (init) -> %d (map).",registryName,itemName,currId,newId);
      remappedIds.put(itemName,new Integer[]{currId,newId});
    }
    if ("minecraft:stone".equals(itemName.toString()))     System.currentTimeMillis();
    I obj=currentRegistry.getRaw(itemName);
    I sub=obj;
    if (currentRegistry.substitutionOriginals.containsKey(itemName)) {
      obj=currentRegistry.substitutionOriginals.get(itemName);
    }
    add(newId,itemName,obj);
    if (currentRegistry.substitutionOriginals.containsKey(itemName) && substitutionCallback != null) {
      substitutionCallback.onSubstituteActivated(slaves,sub,obj,itemName);
    }
  }
}
