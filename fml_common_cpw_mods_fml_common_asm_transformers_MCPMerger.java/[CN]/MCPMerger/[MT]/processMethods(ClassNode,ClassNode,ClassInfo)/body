{
  List<MethodNode> cMethods=(List<MethodNode>)cClass.methods;
  List<MethodNode> sMethods=(List<MethodNode>)sClass.methods;
  LinkedHashSet<MethodWrapper> allMethods=Sets.newLinkedHashSet();
  int cPos=0;
  int sPos=0;
  int cLen=cMethods.size();
  int sLen=sMethods.size();
  String clientName="";
  String lastName=clientName;
  String serverName="";
  while (cPos < cLen || sPos < sLen) {
    do {
      if (sPos >= sLen) {
        break;
      }
      MethodNode sM=sMethods.get(sPos);
      serverName=sM.name;
      if (!serverName.equals(lastName) && cPos != cLen) {
        if (DEBUG) {
          System.out.printf("Server -skip : %s %s %d (%s %d) %d [%s]\n",sClass.name,clientName,cLen - cPos,serverName,sLen - sPos,allMethods.size(),lastName);
        }
        break;
      }
      MethodWrapper mw=new MethodWrapper(sM);
      mw.server=true;
      allMethods.add(mw);
      if (DEBUG) {
        System.out.printf("Server *add* : %s %s %d (%s %d) %d [%s]\n",sClass.name,clientName,cLen - cPos,serverName,sLen - sPos,allMethods.size(),lastName);
      }
      sPos++;
    }
 while (sPos < sLen);
    do {
      if (cPos >= cLen) {
        break;
      }
      MethodNode cM=cMethods.get(cPos);
      lastName=clientName;
      clientName=cM.name;
      if (!clientName.equals(lastName) && sPos != sLen) {
        if (DEBUG) {
          System.out.printf("Client -skip : %s %s %d (%s %d) %d [%s]\n",cClass.name,clientName,cLen - cPos,serverName,sLen - sPos,allMethods.size(),lastName);
        }
        break;
      }
      MethodWrapper mw=new MethodWrapper(cM);
      mw.client=true;
      allMethods.add(mw);
      if (DEBUG) {
        System.out.printf("Client *add* : %s %s %d (%s %d) %d [%s]\n",cClass.name,clientName,cLen - cPos,serverName,sLen - sPos,allMethods.size(),lastName);
      }
      cPos++;
    }
 while (cPos < cLen);
  }
  cMethods.clear();
  sMethods.clear();
  for (  MethodWrapper mw : allMethods) {
    System.out.println(mw);
    cMethods.add(mw.node);
    sMethods.add(mw.node);
    if (mw.server && mw.client) {
    }
 else {
      if (mw.node.visibleAnnotations == null)       mw.node.visibleAnnotations=Lists.newArrayListWithExpectedSize(1);
      mw.node.visibleAnnotations.add(getSideAnn(mw.client));
      if (mw.client) {
        info.sMethods.add(mw.node);
      }
 else {
        info.cMethods.add(mw.node);
      }
    }
  }
}
