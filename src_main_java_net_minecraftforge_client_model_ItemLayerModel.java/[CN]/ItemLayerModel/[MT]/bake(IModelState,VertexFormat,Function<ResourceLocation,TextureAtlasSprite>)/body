{
  ImmutableList.Builder<BakedQuad> builder=ImmutableList.builder();
  Optional<TRSRTransformation> transform=state.apply(Optional.<IModelPart>absent());
  for (int i=0; i < textures.size(); i++) {
    TextureAtlasSprite sprite=bakedTextureGetter.apply(textures.get(i));
    builder.addAll(getQuadsForSprite(i,sprite,format,transform));
  }
  TextureAtlasSprite particle=bakedTextureGetter.apply(textures.isEmpty() ? new ResourceLocation("missingno") : textures.get(0));
  ImmutableMap<TransformType,TRSRTransformation> map=IPerspectiveAwareModel.MapWrapper.getTransforms(state);
  IFlexibleBakedModel ret=new BakedModel(builder.build(),particle,format);
  if (map.isEmpty()) {
    return ret;
  }
  return new IPerspectiveAwareModel.MapWrapper(ret,map);
}
