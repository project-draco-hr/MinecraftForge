{
  FluidStack fluidStack=FluidContainerRegistry.getFluidForFilledItem(stack);
  if (fluidStack == null) {
    if (stack.getItem() instanceof IFluidContainerItem) {
      fluidStack=((IFluidContainerItem)stack.getItem()).getFluid(stack);
    }
  }
  if (fluidStack == null)   return this;
  Fluid fluid=fluidStack.getFluid();
  String name=fluid.getName();
  if (!cache.containsKey(name)) {
    IModel model=parent.process(ImmutableMap.of("fluid",name));
    Function<ResourceLocation,TextureAtlasSprite> textureGetter;
    textureGetter=new Function<ResourceLocation,TextureAtlasSprite>(){
      public TextureAtlasSprite apply(      ResourceLocation location){
        return Minecraft.getMinecraft().getTextureMapBlocks().getAtlasSprite(location.toString());
      }
    }
;
    IFlexibleBakedModel bakedModel=model.bake(new SimpleModelState(transforms),this.getFormat(),textureGetter);
    cache.put(name,bakedModel);
    return bakedModel;
  }
  return cache.get(name);
}
