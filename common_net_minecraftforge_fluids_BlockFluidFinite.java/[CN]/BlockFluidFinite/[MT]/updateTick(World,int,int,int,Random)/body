{
  boolean changed=false;
  int quantaRemaining=world.getBlockMetadata(x,y,z) + 1;
  int prevRemaining=quantaRemaining;
  quantaRemaining=tryToFlowVerticallyInto(world,x,y,z,quantaRemaining);
  if (quantaRemaining < 1) {
    return;
  }
 else   if (quantaRemaining != prevRemaining) {
    changed=true;
    if (quantaRemaining == 1) {
      world.setBlockMetadataWithNotify(x,y,z,quantaRemaining - 1,2);
      return;
    }
  }
 else   if (quantaRemaining == 1) {
    return;
  }
  int lowerthan=quantaRemaining - 1;
  if (displaceIfPossible(world,x,y,z - 1)) {
    world.setBlock(x,y,z - 1,0);
  }
  if (displaceIfPossible(world,x,y,z + 1)) {
    world.setBlock(x,y,z + 1,0);
  }
  if (displaceIfPossible(world,x - 1,y,z)) {
    world.setBlock(x - 1,y,z,0);
  }
  if (displaceIfPossible(world,x + 1,y,z)) {
    world.setBlock(x + 1,y,z,0);
  }
  int north=getQuantaValueBelow(world,x,y,z - 1,lowerthan);
  int south=getQuantaValueBelow(world,x,y,z + 1,lowerthan);
  int west=getQuantaValueBelow(world,x - 1,y,z,lowerthan);
  int east=getQuantaValueBelow(world,x + 1,y,z,lowerthan);
  int total=quantaRemaining;
  int count=1;
  if (north >= 0) {
    ++count;
    total+=north;
  }
  if (south >= 0) {
    ++count;
    total+=south;
  }
  if (west >= 0) {
    ++count;
    total+=west;
  }
  if (east >= 0) {
    ++count;
    total+=east;
  }
  if (count == 1) {
    if (changed) {
      world.setBlockMetadataWithNotify(x,y,z,quantaRemaining - 1,2);
    }
    return;
  }
  int each=total / count;
  int rem=total % count;
  if (north >= 0) {
    int newnorth=each;
    if (rem == count || rem > 1 && rand.nextInt(count - rem) != 0) {
      ++newnorth;
      --rem;
    }
    if (newnorth != north) {
      if (newnorth == 0) {
        world.setBlock(x,y,z - 1,0);
      }
 else {
        world.setBlock(x,y,z - 1,blockID,newnorth - 1,2);
      }
      world.scheduleBlockUpdate(x,y,z - 1,blockID,tickRate);
    }
    --count;
  }
  if (south >= 0) {
    int newsouth=each;
    if (rem == count || rem > 1 && rand.nextInt(count - rem) != 0) {
      ++newsouth;
      --rem;
    }
    if (newsouth != south) {
      if (newsouth == 0) {
        world.setBlock(x,y,z + 1,0);
      }
 else {
        world.setBlock(x,y,z + 1,blockID,newsouth - 1,2);
      }
      world.scheduleBlockUpdate(x,y,z + 1,blockID,tickRate);
    }
    --count;
  }
  if (west >= 0) {
    int newwest=each;
    if (rem == count || rem > 1 && rand.nextInt(count - rem) != 0) {
      ++newwest;
      --rem;
    }
    if (newwest != west) {
      if (newwest == 0) {
        world.setBlock(x - 1,y,z,0);
      }
 else {
        world.setBlock(x - 1,y,z,blockID,newwest - 1,2);
      }
      world.scheduleBlockUpdate(x - 1,y,z,blockID,tickRate);
    }
    --count;
  }
  if (east >= 0) {
    int neweast=each;
    if (rem == count || rem > 1 && rand.nextInt(count - rem) != 0) {
      ++neweast;
      --rem;
    }
    if (neweast != east) {
      if (neweast == 0) {
        world.setBlock(x + 1,y,z,0);
      }
 else {
        world.setBlock(x + 1,y,z,blockID,neweast - 1,2);
      }
      world.scheduleBlockUpdate(x + 1,y,z,blockID,tickRate);
    }
    --count;
  }
  if (rem > 0) {
    ++each;
  }
  world.setBlockMetadataWithNotify(x,y,z,each - 1,2);
}
