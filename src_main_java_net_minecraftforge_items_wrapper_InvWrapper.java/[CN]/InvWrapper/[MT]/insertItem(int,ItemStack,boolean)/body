{
  if (stack == null)   return null;
  if (!getInv().isItemValidForSlot(slot,stack))   return stack;
  ItemStack stackInSlot=getInv().getStackInSlot(slot);
  int m;
  if (stackInSlot != null) {
    if (!ItemHandlerHelper.canItemStacksStack(stack,stackInSlot))     return stack;
    m=Math.min(stack.getMaxStackSize(),getInv().getInventoryStackLimit()) - stackInSlot.stackSize;
    if (stack.stackSize <= m) {
      if (!simulate) {
        ItemStack copy=stack.copy();
        copy.stackSize+=stackInSlot.stackSize;
        getInv().setInventorySlotContents(slot,copy);
        getInv().markDirty();
      }
      return null;
    }
 else {
      stack=stack.copy();
      if (!simulate) {
        ItemStack copy=stack.splitStack(m);
        copy.stackSize+=stackInSlot.stackSize;
        getInv().setInventorySlotContents(slot,copy);
        getInv().markDirty();
        return stack;
      }
 else {
        stack.stackSize-=m;
        return stack;
      }
    }
  }
 else {
    m=Math.min(stack.getMaxStackSize(),getInv().getInventoryStackLimit());
    if (m < stack.stackSize) {
      stack=stack.copy();
      if (!simulate) {
        getInv().setInventorySlotContents(slot,stack.splitStack(m));
        getInv().markDirty();
        return stack;
      }
 else {
        stack.stackSize-=m;
        return stack;
      }
    }
 else {
      if (!simulate) {
        getInv().setInventorySlotContents(slot,stack);
        getInv().markDirty();
      }
      return null;
    }
  }
}
