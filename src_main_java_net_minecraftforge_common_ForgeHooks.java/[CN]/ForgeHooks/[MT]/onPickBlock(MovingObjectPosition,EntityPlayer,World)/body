{
  ItemStack result=null;
  boolean isCreative=player.capabilities.isCreativeMode;
  TileEntity te=null;
  if (target.typeOfHit == MovingObjectType.BLOCK) {
    IBlockState state=world.getBlockState(target.getBlockPos());
    if (state.getBlock().isAir(world,target.getBlockPos())) {
      return false;
    }
    if (isCreative && GuiScreen.isCtrlKeyDown())     te=world.getTileEntity(target.getBlockPos());
    result=state.getBlock().getPickBlock(target,world,target.getBlockPos());
  }
 else {
    if (target.typeOfHit != MovingObjectType.ENTITY || target.entityHit == null || !isCreative) {
      return false;
    }
    result=target.entityHit.getPickedResult(target);
  }
  if (result == null) {
    return false;
  }
  if (te != null) {
    NBTTagCompound nbt=new NBTTagCompound();
    te.writeToNBT(nbt);
    result.setTagInfo("BlockEntityTag",nbt);
    NBTTagCompound display=new NBTTagCompound();
    result.setTagInfo("display",display);
    NBTTagList lore=new NBTTagList();
    display.setTag("Lore",lore);
    lore.appendTag(new NBTTagString("(+NBT)"));
  }
  for (int x=0; x < 9; x++) {
    ItemStack stack=player.inventory.getStackInSlot(x);
    if (stack != null && stack.isItemEqual(result) && ItemStack.areItemStackTagsEqual(stack,result)) {
      player.inventory.currentItem=x;
      return true;
    }
  }
  if (!isCreative) {
    return false;
  }
  int slot=player.inventory.getFirstEmptyStack();
  if (slot < 0 || slot >= 9) {
    slot=player.inventory.currentItem;
  }
  player.inventory.setInventorySlotContents(slot,result);
  player.inventory.currentItem=slot;
  return true;
}
