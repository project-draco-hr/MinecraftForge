{
  JsonNode root=new JdomParser().parse(new InputStreamReader(input));
  List<JsonNode> lst=root.getArrayNode();
  JsonNode modinfo=null;
  for (  JsonNode tmodinfo : lst) {
    if (mod.getName().equals(tmodinfo.getStringValue("modid"))) {
      modinfo=tmodinfo;
      break;
    }
  }
  if (modinfo == null) {
    FMLCommonHandler.instance().getFMLLogger().fine(String.format("Unable to process JSON modinfo file for %s",mod.getName()));
    return null;
  }
  ModMetadata meta=new ModMetadata(mod);
  try {
    meta.name=modinfo.getStringValue("name");
    meta.description=modinfo.getStringValue("description").replace("\r","");
    meta.version=modinfo.getStringValue("version");
    meta.credits=modinfo.getStringValue("credits");
    List<JsonNode> authors=modinfo.getArrayNode("authors");
    StringBuilder sb=new StringBuilder();
    for (int i=0; i < authors.size(); i++) {
      meta.authorList.add(((JsonNode)authors.get(i)).getText());
    }
    meta.logoFile=modinfo.getStringValue("logoFile");
    meta.url=modinfo.getStringValue("url");
    meta.updateUrl=modinfo.getStringValue("updateUrl");
    meta.parent=modinfo.getStringValue("parent");
    List<JsonNode> screenshots=modinfo.getArrayNode("screenshots");
    meta.screenshots=new String[screenshots.size()];
    for (int i=0; i < screenshots.size(); i++) {
      meta.screenshots[i]=((JsonNode)screenshots.get(i)).getText();
    }
  }
 catch (  Exception e) {
    FMLCommonHandler.instance().getFMLLogger().log(Level.FINE,String.format("An error occured reading the info file for %s",mod.getName()),e);
    if (Item.class.getPackage() != null) {
      System.out.println(String.format("An error occured reading the info file for %s",mod.getName()));
      e.printStackTrace();
    }
  }
  return meta;
}
