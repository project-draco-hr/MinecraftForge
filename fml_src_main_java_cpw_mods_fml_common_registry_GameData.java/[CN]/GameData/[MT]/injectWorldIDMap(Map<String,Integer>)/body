{
  Map<String,Integer[]> remaps=Maps.newHashMap();
  ArrayListMultimap<String,String> missing=ArrayListMultimap.create();
  blockRegistry.beginIdSwap();
  itemRegistry.beginIdSwap();
  for (  Entry<String,Integer> entry : dataList.entrySet()) {
    String itemName=entry.getKey();
    char discriminator=itemName.charAt(0);
    itemName=itemName.substring(1);
    Integer newId=entry.getValue();
    int currId;
    boolean isBlock=discriminator == '\u0001';
    if (isBlock) {
      currId=blockRegistry.getId(itemName);
    }
 else {
      currId=itemRegistry.getId(itemName);
    }
    if (currId == -1) {
      FMLLog.info("Found a missing id from the world %s",itemName);
      missing.put(itemName.substring(0,itemName.indexOf(':')),itemName);
    }
 else     if (currId != newId) {
      FMLLog.info("Found %s id mismatch %s : %d %d",isBlock ? "block" : "item",itemName,currId,newId);
      remaps.put(itemName,new Integer[]{currId,newId});
    }
    if (isBlock) {
      blockRegistry.reassignMapping(itemName,newId);
    }
 else {
      itemRegistry.reassignMapping(itemName,newId);
    }
  }
  boolean successfullyLoaded=Loader.instance().fireMissingMappingEvent(missing);
  if (!successfullyLoaded) {
    blockRegistry.revertSwap();
    itemRegistry.revertSwap();
    return false;
  }
  blockRegistry.completeIdSwap();
  itemRegistry.completeIdSwap();
  Loader.instance().fireRemapEvent(remaps);
  return true;
}
