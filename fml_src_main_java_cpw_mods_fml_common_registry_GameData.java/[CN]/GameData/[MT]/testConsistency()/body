{
  for (int i=availabilityMap.nextSetBit(0); i >= 0; i=availabilityMap.nextSetBit(i + 1)) {
    if (iBlockRegistry.getRaw(i) == null && iItemRegistry.getRaw(i) == null && !blockedIds.contains(i)) {
      throw new IllegalStateException(String.format("availabilityMap references empty entries for id %d.",i));
    }
  }
  for (int pass=0; pass < 2; pass++) {
    boolean isBlock=pass == 0;
    String type=isBlock ? "block" : "item";
    FMLControlledNamespacedRegistry registry=isBlock ? iBlockRegistry : iItemRegistry;
    for (    Object obj : registry) {
      int id=registry.getId(obj);
      String name=registry.getNameForObject(obj);
      if (id < 0)       throw new IllegalStateException(String.format("Registry entry for %s %s, name %s, doesn't yield an id.",type,obj,name));
      if (id > (isBlock ? MAX_BLOCK_ID : MAX_ITEM_ID))       throw new IllegalStateException(String.format("Registry entry for %s %s, name %s uses the too large id %d.",type,obj,name));
      if (name == null)       throw new IllegalStateException(String.format("Registry entry for %s %s, id %d, doesn't yield a name.",type,obj,id));
      if (name.isEmpty())       throw new IllegalStateException(String.format("Registry entry for %s %s, id %d, yields an empty name.",type,obj,id));
      if (name.indexOf(':') == -1)       throw new IllegalStateException(String.format("Registry entry for %s %s, id %d, has the non-prefixed name %s.",type,obj,id,name));
      if (registry.getRaw(id) != obj)       throw new IllegalStateException(String.format("Registry entry for id %d, name %s, doesn't yield the expected %s %s.",id,name,type,obj));
      if (registry.getRaw(name) != obj)       throw new IllegalStateException(String.format("Registry entry for name %s, id %d, doesn't yield the expected %s %s.",name,id,type,obj));
      if (registry.getId(name) != id)       throw new IllegalStateException(String.format("Registry entry for name %s doesn't yield the expected id %d.",name,id));
      if (!availabilityMap.get(id))       throw new IllegalStateException(String.format("Registry entry for %s %s, id %d, name %s, marked as empty.",type,obj,id,name));
      if (blockedIds.contains(id))       throw new IllegalStateException(String.format("Registry entry for %s %s, id %d, name %s, marked as dangling.",type,obj,id,name));
      if (obj instanceof ItemBlock) {
        Block block=((ItemBlock)obj).field_150939_a;
        if (iBlockRegistry.getId(block) != id) {
          throw new IllegalStateException(String.format("Registry entry for ItemBlock %s, id %d, is missing or uses the non-matching id %d.",obj,id,iBlockRegistry.getId(block)));
        }
        if (id > MAX_BLOCK_ID)         throw new IllegalStateException(String.format("ItemBlock %s uses the id %d outside the block id range",name,id));
      }
    }
  }
  FMLLog.fine("Registry consistency check successful");
}
