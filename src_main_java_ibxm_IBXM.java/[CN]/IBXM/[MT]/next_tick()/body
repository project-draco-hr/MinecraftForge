{
  int channel_idx;
  boolean song_end;
  for (channel_idx=0; channel_idx < channels.length; channel_idx++) {
    channels[channel_idx].update_sample_idx(tick_length_samples);
  }
  tick_counter-=1;
  if (tick_counter <= 0) {
    tick_counter=ticks_per_row;
    song_end=next_row();
  }
 else {
    for (channel_idx=0; channel_idx < channels.length; channel_idx++) {
      channels[channel_idx].tick();
    }
    song_end=false;
  }
  return song_end;
}
