{
  HashMap<String,ModContainer> modList=new HashMap<String,ModContainer>();
  List<ModContainer> mods=new ArrayList<ModContainer>(this.mods);
  for (  ModContainer m : mods) {
    modList.put(m.getName(),m);
  }
  ModSorter ms=new ModSorter(mods,modList);
  List<ModContainer> sortedMods=ms.sort();
  assertEquals("29 mods",29,sortedMods.size());
  assertEquals("Chicken Core is at index zero",sortedMods.indexOf(modList.get("mod_CodeChickenCore")),0);
  ModContainer forestry=modList.get("mod_Forestry");
  ModContainer ic2=modList.get("mod_IC2");
  ModContainer bccore=modList.get("mod_BuildCraftCore");
  ModContainer bcener=modList.get("mod_BuildCraftEnergy");
  ModContainer bcfact=modList.get("mod_BuildCraftFactory");
  ModContainer bcbuild=modList.get("mod_BuildCraftBuilders");
  ModContainer bctrans=modList.get("mod_BuildCraftTransport");
  ModContainer tfrmrs=modList.get("mod_Transformers");
  assertTrue("Forestry is after IC2",sortedMods.indexOf(forestry) > sortedMods.indexOf(ic2));
  assertTrue("Forestry is after BC core",sortedMods.indexOf(forestry) > sortedMods.indexOf(bccore));
  assertTrue("Forestry is after BC energy",sortedMods.indexOf(forestry) > sortedMods.indexOf(bcener));
  assertTrue("Forestry is after BC factory",sortedMods.indexOf(forestry) > sortedMods.indexOf(bcfact));
  assertTrue("Forestry is after BC trans",sortedMods.indexOf(forestry) > sortedMods.indexOf(bctrans));
  assertTrue("Transformers is after IC2",sortedMods.indexOf(tfrmrs) > sortedMods.indexOf(ic2));
  assertTrue("Transformers is after BC core",sortedMods.indexOf(tfrmrs) > sortedMods.indexOf(bccore));
  assertTrue("Transformers is after BC ener",sortedMods.indexOf(tfrmrs) > sortedMods.indexOf(bcener));
  assertTrue("Transformers is after BC fact",sortedMods.indexOf(tfrmrs) > sortedMods.indexOf(bcfact));
  assertTrue("Transformers is after BC build",sortedMods.indexOf(tfrmrs) > sortedMods.indexOf(bcbuild));
  assertTrue("Transformers is after BC trans",sortedMods.indexOf(tfrmrs) > sortedMods.indexOf(bctrans));
  assertTrue("AdvMach is after IC2",sortedMods.indexOf(modList.get("mod_IC2AdvancedMachines")) > sortedMods.indexOf(ic2));
  assertTrue("CompactSolars is after IC2",sortedMods.indexOf(modList.get("mod_CompactSolars")) > sortedMods.indexOf(ic2));
  assertTrue("WR RP is after WR core",sortedMods.indexOf(modList.get("mod_WirelessRedstoneRedPower")) > sortedMods.indexOf(modList.get("mod_WirelessRedstoneCore")));
  assertTrue("AdditionalPipes is after BC trans",sortedMods.indexOf(modList.get("mod_AdditionalPipes")) > sortedMods.indexOf(bctrans));
  assertTrue("SeedManager is after IC2",sortedMods.indexOf(modList.get("mod_SeedManager")) > sortedMods.indexOf(ic2));
  assertEquals("SeedManager is at the end",28,sortedMods.indexOf(modList.get("mod_SeedManager")));
  sortedMods.remove(modList.get("mod_CodeChickenCore"));
  mods.remove(modList.get("mod_CodeChickenCore"));
  sortedMods.remove(ic2);
  mods.remove(ic2);
  sortedMods.remove(forestry);
  mods.remove(forestry);
  sortedMods.remove(bccore);
  mods.remove(bccore);
  sortedMods.remove(bcbuild);
  mods.remove(bcbuild);
  sortedMods.remove(bcener);
  mods.remove(bcener);
  sortedMods.remove(bcfact);
  mods.remove(bcfact);
  sortedMods.remove(bctrans);
  mods.remove(bctrans);
  sortedMods.remove(tfrmrs);
  mods.remove(tfrmrs);
  sortedMods.remove(modList.get("mod_IC2AdvancedMachines"));
  mods.remove(modList.get("mod_IC2AdvancedMachines"));
  sortedMods.remove(modList.get("mod_SeedManager"));
  mods.remove(modList.get("mod_SeedManager"));
  sortedMods.remove(modList.get("mod_AdditionalPipes"));
  mods.remove(modList.get("mod_AdditionalPipes"));
  sortedMods.remove(modList.get("mod_WirelessRedstoneCore"));
  mods.remove(modList.get("mod_WirelessRedstoneCore"));
  sortedMods.remove(modList.get("mod_WirelessRedstoneRedPower"));
  mods.remove(modList.get("mod_WirelessRedstoneRedPower"));
  sortedMods.remove(modList.get("mod_CompactSolars"));
  mods.remove(modList.get("mod_CompactSolars"));
  assertArrayEquals("Sort is stable",mods.toArray(),sortedMods.toArray());
}
