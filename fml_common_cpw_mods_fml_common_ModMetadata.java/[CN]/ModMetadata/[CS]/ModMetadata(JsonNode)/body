{
  Map<JsonStringNode,Object> processedFields=Maps.transformValues(node.getFields(),new JsonStringConverter());
  modId=(String)processedFields.get(aStringBuilder("modid"));
  if (Strings.isNullOrEmpty(modId)) {
    FMLLog.log(Level.SEVERE,"Found an invalid mod metadata file - missing modid");
    throw new LoaderException();
  }
  name=Strings.nullToEmpty((String)processedFields.get(aStringBuilder("name")));
  description=Strings.nullToEmpty((String)processedFields.get(aStringBuilder("description")));
  url=Strings.nullToEmpty((String)processedFields.get(aStringBuilder("url")));
  updateUrl=Strings.nullToEmpty((String)processedFields.get(aStringBuilder("updateUrl")));
  logoFile=Strings.nullToEmpty((String)processedFields.get(aStringBuilder("logoFile")));
  version=Strings.nullToEmpty((String)processedFields.get(aStringBuilder("version")));
  credits=Strings.nullToEmpty((String)processedFields.get(aStringBuilder("credits")));
  parent=Strings.nullToEmpty((String)processedFields.get(aStringBuilder("parent")));
  authorList=Objects.firstNonNull(((List<String>)processedFields.get(aStringBuilder("authors"))),Objects.firstNonNull(((List<String>)processedFields.get(aStringBuilder("authorList"))),authorList));
  requiredMods=processReferences(processedFields.get(aStringBuilder("requiredMods")),Set.class);
  dependencies=processReferences(processedFields.get(aStringBuilder("dependencies")),List.class);
  dependants=processReferences(processedFields.get(aStringBuilder("dependants")),List.class);
  useDependencyInformation=Boolean.parseBoolean(Strings.nullToEmpty((String)processedFields.get(aStringBuilder("useDependencyInformation"))));
}
