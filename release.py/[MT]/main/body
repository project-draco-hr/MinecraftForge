def main():
    global version_str
    build_num = 0
    if (len(sys.argv) > 1):
        try:
            build_num = int(sys.argv[1])
        except:
            pass
    ret = 0
    fml_dir = os.path.join(forge_dir, 'fml')
    build_forge_dev(mcp_dir, forge_dir, fml_dir, build_num)
    if (ret != 0):
        sys.exit(ret)
    print '=================================== Release Start ================================='
    error_level = 0
    try:
        os.chdir(mcp_dir)
        reset_logger()
        reobfuscate(None, False, True, True)
        reset_logger()
        os.chdir(forge_dir)
    except SystemExit as e:
        print ('Reobfusicate Exception: %d ' % e.code)
        error_level = e.code
    extract_fml_obfed()
    version = load_version(build_num)
    version_str = ('%d.%d.%d.%d' % (version['major'], version['minor'], version['revision'], version['build']))
    out_folder = os.path.join(forge_dir, ('forge-%s' % version_str))
    if os.path.isdir(out_folder):
        shutil.rmtree(out_folder)
    os.makedirs(out_folder)
    zip_start(('minecraftforge-client-%s.zip' % version_str))
    zip_folder(client_dir, '', zip)
    zip_add('forge_client/src/forge_logo.png')
    zip_add('install/MinecraftForge-Credits.txt')
    zip_add('install/MinecraftForge-License.txt')
    zip_add('fml/CREDITS-fml.txt')
    zip_add('fml/LICENSE-fml.txt')
    zip_add('fml/README-fml.txt')
    zip_add('fml/common/fml_at.cfg')
    zip_add('fml/common/fml_marker.cfg')
    zip_add('fml/common/fmlversion.properties')
    zip_add('install/Paulscode IBXM Library License.txt')
    zip_add('install/Paulscode SoundSystem CodecIBXM License.txt')
    zip_end()
    zip_start(('minecraftforge-server-%s.zip' % version_str))
    zip_folder(server_dir, '', zip)
    zip_add('install/MinecraftForge-Credits.txt')
    zip_add('install/MinecraftForge-License.txt')
    zip_add('fml/CREDITS-fml.txt')
    zip_add('fml/LICENSE-fml.txt')
    zip_add('fml/README-fml.txt')
    zip_add('fml/common/fml_at.cfg')
    zip_add('fml/common/fml_marker.cfg')
    zip_add('fml/common/fmlversion.properties')
    zip_end()
    inject_version(os.path.join(forge_dir, 'common/net/minecraftforge/common/ForgeVersion.java'.replace('/', os.sep)), build_num)
    zip_start(('minecraftforge-src-%s.zip' % version_str), 'forge')
    zip_add('client', 'client')
    zip_add('common', 'common')
    zip_add('server', 'server')
    zip_add('patches', 'patches')
    zip_add('fml', 'fml')
    zip_add('install/install.cmd')
    zip_add('install/install.sh')
    zip_add('install/README-MinecraftForge.txt')
    zip_add('install/install.py')
    zip_add('forge.py')
    zip_add('install/MinecraftForge-Credits.txt')
    zip_add('install/MinecraftForge-License.txt')
    zip_add('install/Paulscode IBXM Library License.txt')
    zip_add('install/Paulscode SoundSystem CodecIBXM License.txt')
    zip_end()
    inject_version(os.path.join(forge_dir, 'common/net/minecraftforge/common/ForgeVersion.java'.replace('/', os.sep)), 0)
    print ('=================================== Release Finished %d =================================' % error_level)
    sys.exit(error_level)
