{
  if (pre(FOOD))   return;
  mc.mcProfiler.startSection("food");
  EntityPlayer player=(EntityPlayer)this.mc.getRenderViewEntity();
  GlStateManager.enableBlend();
  int left=width / 2 + 91;
  int top=height - right_height;
  right_height+=10;
  boolean unused=false;
  FoodStats stats=mc.thePlayer.getFoodStats();
  int level=stats.getFoodLevel();
  int levelLast=stats.getPrevFoodLevel();
  for (int i=0; i < 10; ++i) {
    int idx=i * 2 + 1;
    int x=left - i * 8 - 9;
    int y=top;
    int icon=16;
    byte background=0;
    if (mc.thePlayer.isPotionActive(MobEffects.HUNGER)) {
      icon+=36;
      background=13;
    }
    if (unused)     background=1;
    if (player.getFoodStats().getSaturationLevel() <= 0.0F && updateCounter % (level * 3 + 1) == 0) {
      y=top + (rand.nextInt(3) - 1);
    }
    drawTexturedModalRect(x,y,16 + background * 9,27,9,9);
    if (unused) {
      if (idx < levelLast)       drawTexturedModalRect(x,y,icon + 54,27,9,9);
 else       if (idx == levelLast)       drawTexturedModalRect(x,y,icon + 63,27,9,9);
    }
    if (idx < level)     drawTexturedModalRect(x,y,icon + 36,27,9,9);
 else     if (idx == level)     drawTexturedModalRect(x,y,icon + 45,27,9,9);
  }
  GlStateManager.disableBlend();
  mc.mcProfiler.endSection();
  post(FOOD);
}
