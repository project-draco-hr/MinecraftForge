{
  this.field=field;
  this.isBlock=Block.class.isAssignableFrom(field.getType());
  this.isItem=Item.class.isAssignableFrom(field.getType());
  if (extractFromExistingValues) {
    try {
      Object existing=field.get(null);
      if (existing == null || existing == GameData.getBlockRegistry().getDefaultValue()) {
        this.injectedObject=null;
        this.field=null;
        this.isBlock=false;
        this.isItem=false;
        return;
      }
 else {
        Object tmp=isBlock ? GameData.getBlockRegistry().getNameForObject(existing) : isItem ? GameData.getItemRegistry().getNameForObject(existing) : null;
        this.injectedObject=tmp != null ? tmp.toString() : null;
      }
    }
 catch (    Exception e) {
      throw Throwables.propagate(e);
    }
  }
 else {
    this.injectedObject=injectedObject;
  }
  if (this.injectedObject == null || !isValid()) {
    throw new IllegalStateException(String.format("The ObjectHolder annotation cannot apply to a field that is not an Item or Block (found : %s at %s.%s)",field.getType().getName(),field.getClass().getName(),field.getName()));
  }
  makeWritable(field);
}
