{
  if (this.visible) {
    this.hovered=mouseX >= this.xPosition && mouseY >= this.yPosition && mouseX < this.xPosition + this.width && mouseY < this.yPosition + this.height;
    int k=this.getHoverState(this.hovered);
    GuiUtils.drawContinuousTexturedBox(GuiButton.BUTTON_TEXTURES,this.xPosition,this.yPosition,0,46 + k * 20,this.width,this.height,200,20,2,3,2,2,this.zLevel);
    this.mouseDragged(mc,mouseX,mouseY);
    int color=14737632;
    if (packedFGColour != 0) {
      color=packedFGColour;
    }
 else     if (!this.enabled) {
      color=10526880;
    }
 else     if (this.hovered) {
      color=16777120;
    }
    String buttonText=this.displayString;
    int glyphWidth=(int)(mc.fontRendererObj.getStringWidth(glyph) * glyphScale);
    int strWidth=mc.fontRendererObj.getStringWidth(buttonText);
    int ellipsisWidth=mc.fontRendererObj.getStringWidth("...");
    int totalWidth=strWidth + glyphWidth;
    if (totalWidth > width - 6 && totalWidth > ellipsisWidth)     buttonText=mc.fontRendererObj.trimStringToWidth(buttonText,width - 6 - ellipsisWidth).trim() + "...";
    strWidth=mc.fontRendererObj.getStringWidth(buttonText);
    totalWidth=glyphWidth + strWidth;
    GlStateManager.pushMatrix();
    GlStateManager.scale(glyphScale,glyphScale,1.0F);
    this.drawCenteredString(mc.fontRendererObj,glyph,(int)(((this.xPosition + (this.width / 2) - (strWidth / 2)) / glyphScale) - (glyphWidth / (2 * glyphScale)) + 2),(int)(((this.yPosition + ((this.height - 8) / glyphScale) / 2) - 1) / glyphScale),color);
    GlStateManager.popMatrix();
    this.drawCenteredString(mc.fontRendererObj,buttonText,(int)(this.xPosition + (this.width / 2) + (glyphWidth / glyphScale)),this.yPosition + (this.height - 8) / 2,color);
  }
}
