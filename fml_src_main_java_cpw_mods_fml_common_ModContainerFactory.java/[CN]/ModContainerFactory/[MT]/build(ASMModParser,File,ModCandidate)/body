{
  String className=modParser.getASMType().getClassName();
  if (modParser.isBaseMod(container.getRememberedBaseMods()) && modClass.matcher(className).find()) {
    FMLLog.severe("Found a BaseMod type mod %s",className);
    FMLLog.severe("This will not be loaded and will be ignored. ModLoader mechanisms are no longer available.");
  }
 else   if (modClass.matcher(className).find()) {
    FMLLog.fine("Identified a class %s following modloader naming convention but not directly a BaseMod or currently seen subclass",className);
    container.rememberModCandidateType(modParser);
  }
 else   if (modParser.isBaseMod(container.getRememberedBaseMods())) {
    FMLLog.fine("Found a basemod %s of non-standard naming format",className);
    container.rememberBaseModType(className);
  }
  for (  ModAnnotation ann : modParser.getAnnotations()) {
    if (ann.getASMType().equals(Type.getType(Mod.class))) {
      FMLLog.fine("Identified an FMLMod type mod %s",className);
      return new FMLModContainer(className,container,ann.getValues());
    }
  }
  return null;
}
