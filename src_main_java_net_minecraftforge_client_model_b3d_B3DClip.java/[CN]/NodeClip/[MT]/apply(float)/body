{
  TRSRTransformation ret=TRSRTransformation.identity();
  if (node.getAnimation() == null) {
    return ret.compose(new TRSRTransformation(node.getPos(),node.getRot(),node.getScale(),null));
  }
  int start=Math.max(1,(int)Math.round(Math.floor(time)));
  int end=Math.min(start + 1,(int)Math.round(Math.ceil(time)));
  float progress=time - (float)Math.floor(time);
  Key keyStart=node.getAnimation().getKeys().get(start,node);
  Key keyEnd=node.getAnimation().getKeys().get(end,node);
  TRSRTransformation startTr=keyStart == null ? null : new TRSRTransformation(keyStart.getPos(),keyStart.getRot(),keyStart.getScale(),null);
  TRSRTransformation endTr=keyEnd == null ? null : new TRSRTransformation(keyEnd.getPos(),keyEnd.getRot(),keyEnd.getScale(),null);
  if (keyStart == null) {
    if (keyEnd == null) {
      ret=ret.compose(new TRSRTransformation(node.getPos(),node.getRot(),node.getScale(),null));
    }
 else {
      ret=ret.compose(endTr);
    }
  }
 else   if (progress < 1e-5 || keyEnd == null) {
    ret=ret.compose(startTr);
  }
 else {
    ret=ret.compose(startTr.slerp(endTr,progress));
  }
  return ret;
}
