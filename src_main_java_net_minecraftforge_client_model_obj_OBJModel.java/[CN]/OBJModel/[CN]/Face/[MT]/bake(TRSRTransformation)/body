{
  Matrix4f m=transform.getMatrix();
  Vertex[] vertices=new Vertex[verts.length];
  for (int i=0; i < verts.length; i++) {
    m=transform.getMatrix();
    Vertex v=verts[i];
    Vector4f pos=new Vector4f(v.getPos()), newPos=new Vector4f();
    pos.w=1;
    m.transform(pos,newPos);
    vertices[i]=new Vertex(newPos,v.getMaterial());
    if (v.hasNormal()) {
      m.invert();
      Vector4f normal=new Vector4f(v.getNormal().getData()), newNormal=new Vector4f();
      normal.w=1.0f;
      m.transform(normal,newNormal);
      Vector3f rNormal=new Vector3f(newNormal.x / newNormal.w,newNormal.y / newNormal.w,newNormal.z / newNormal.w);
      rNormal.normalize();
      vertices[i].setNormal(new Normal(rNormal));
    }
 else     v.setNormal(new Normal(0.0f,1.0f,0.0f));
    if (v.hasTextureCoordinate())     vertices[i].setTextureCoordinate(v.getTextureCoordinate());
 else     v.setTextureCoordinate(TextureCoordinate.getDefaultUVs()[i]);
  }
  return new Face(vertices,this.materialName);
}
