{
  if (!hasInit) {
    registerOre("logWood",new ItemStack(Blocks.LOG,1,WILDCARD_VALUE));
    registerOre("logWood",new ItemStack(Blocks.LOG2,1,WILDCARD_VALUE));
    registerOre("plankWood",new ItemStack(Blocks.PLANKS,1,WILDCARD_VALUE));
    registerOre("slabWood",new ItemStack(Blocks.WOODEN_SLAB,1,WILDCARD_VALUE));
    registerOre("stairWood",Blocks.OAK_STAIRS);
    registerOre("stairWood",Blocks.SPRUCE_STAIRS);
    registerOre("stairWood",Blocks.BIRCH_STAIRS);
    registerOre("stairWood",Blocks.JUNGLE_STAIRS);
    registerOre("stairWood",Blocks.ACACIA_STAIRS);
    registerOre("stairWood",Blocks.DARK_OAK_STAIRS);
    registerOre("stickWood",Items.STICK);
    registerOre("treeSapling",new ItemStack(Blocks.SAPLING,1,WILDCARD_VALUE));
    registerOre("treeLeaves",new ItemStack(Blocks.LEAVES,1,WILDCARD_VALUE));
    registerOre("treeLeaves",new ItemStack(Blocks.LEAVES2,1,WILDCARD_VALUE));
    registerOre("vine",Blocks.VINE);
    registerOre("oreGold",Blocks.GOLD_ORE);
    registerOre("oreIron",Blocks.IRON_ORE);
    registerOre("oreLapis",Blocks.LAPIS_ORE);
    registerOre("oreDiamond",Blocks.DIAMOND_ORE);
    registerOre("oreRedstone",Blocks.REDSTONE_ORE);
    registerOre("oreEmerald",Blocks.EMERALD_ORE);
    registerOre("oreQuartz",Blocks.QUARTZ_ORE);
    registerOre("oreCoal",Blocks.COAL_ORE);
    registerOre("ingotIron",Items.IRON_INGOT);
    registerOre("ingotGold",Items.GOLD_INGOT);
    registerOre("ingotBrick",Items.BRICK);
    registerOre("ingotBrickNether",Items.NETHERBRICK);
    registerOre("nuggetGold",Items.GOLD_NUGGET);
    registerOre("gemDiamond",Items.DIAMOND);
    registerOre("gemEmerald",Items.EMERALD);
    registerOre("gemQuartz",Items.QUARTZ);
    registerOre("gemPrismarine",Items.PRISMARINE_SHARD);
    registerOre("dustPrismarine",Items.PRISMARINE_CRYSTALS);
    registerOre("dustRedstone",Items.REDSTONE);
    registerOre("dustGlowstone",Items.GLOWSTONE_DUST);
    registerOre("gemLapis",new ItemStack(Items.DYE,1,4));
    registerOre("blockGold",Blocks.GOLD_BLOCK);
    registerOre("blockIron",Blocks.IRON_BLOCK);
    registerOre("blockLapis",Blocks.LAPIS_BLOCK);
    registerOre("blockDiamond",Blocks.DIAMOND_BLOCK);
    registerOre("blockRedstone",Blocks.REDSTONE_BLOCK);
    registerOre("blockEmerald",Blocks.EMERALD_BLOCK);
    registerOre("blockQuartz",Blocks.QUARTZ_BLOCK);
    registerOre("blockCoal",Blocks.COAL_BLOCK);
    registerOre("cropWheat",Items.WHEAT);
    registerOre("cropPotato",Items.POTATO);
    registerOre("cropCarrot",Items.CARROT);
    registerOre("cropNetherWart",Items.NETHER_WART);
    registerOre("sugarcane",Items.REEDS);
    registerOre("blockCactus",Blocks.CACTUS);
    registerOre("dye",new ItemStack(Items.DYE,1,WILDCARD_VALUE));
    registerOre("paper",new ItemStack(Items.PAPER));
    registerOre("slimeball",Items.SLIME_BALL);
    registerOre("enderpearl",Items.ENDER_PEARL);
    registerOre("bone",Items.BONE);
    registerOre("gunpowder",Items.GUNPOWDER);
    registerOre("string",Items.STRING);
    registerOre("netherStar",Items.NETHER_STAR);
    registerOre("leather",Items.LEATHER);
    registerOre("feather",Items.FEATHER);
    registerOre("egg",Items.EGG);
    registerOre("record",Items.RECORD_13);
    registerOre("record",Items.RECORD_CAT);
    registerOre("record",Items.RECORD_BLOCKS);
    registerOre("record",Items.RECORD_CHIRP);
    registerOre("record",Items.RECORD_FAR);
    registerOre("record",Items.RECORD_MALL);
    registerOre("record",Items.RECORD_MELLOHI);
    registerOre("record",Items.RECORD_STAL);
    registerOre("record",Items.RECORD_STRAD);
    registerOre("record",Items.RECORD_WARD);
    registerOre("record",Items.RECORD_11);
    registerOre("record",Items.RECORD_WAIT);
    registerOre("dirt",Blocks.DIRT);
    registerOre("grass",Blocks.GRASS);
    registerOre("stone",Blocks.STONE);
    registerOre("cobblestone",Blocks.COBBLESTONE);
    registerOre("gravel",Blocks.GRAVEL);
    registerOre("sand",new ItemStack(Blocks.SAND,1,WILDCARD_VALUE));
    registerOre("sandstone",new ItemStack(Blocks.SANDSTONE,1,WILDCARD_VALUE));
    registerOre("sandstone",new ItemStack(Blocks.RED_SANDSTONE,1,WILDCARD_VALUE));
    registerOre("netherrack",Blocks.NETHERRACK);
    registerOre("obsidian",Blocks.OBSIDIAN);
    registerOre("glowstone",Blocks.GLOWSTONE);
    registerOre("endstone",Blocks.END_STONE);
    registerOre("torch",Blocks.TORCH);
    registerOre("workbench",Blocks.CRAFTING_TABLE);
    registerOre("blockSlime",Blocks.SLIME_BLOCK);
    registerOre("blockPrismarine",new ItemStack(Blocks.PRISMARINE,1,BlockPrismarine.EnumType.ROUGH.getMetadata()));
    registerOre("blockPrismarineBrick",new ItemStack(Blocks.PRISMARINE,1,BlockPrismarine.EnumType.BRICKS.getMetadata()));
    registerOre("blockPrismarineDark",new ItemStack(Blocks.PRISMARINE,1,BlockPrismarine.EnumType.DARK.getMetadata()));
    registerOre("stoneGranite",new ItemStack(Blocks.STONE,1,1));
    registerOre("stoneGranitePolished",new ItemStack(Blocks.STONE,1,2));
    registerOre("stoneDiorite",new ItemStack(Blocks.STONE,1,3));
    registerOre("stoneDioritePolished",new ItemStack(Blocks.STONE,1,4));
    registerOre("stoneAndesite",new ItemStack(Blocks.STONE,1,5));
    registerOre("stoneAndesitePolished",new ItemStack(Blocks.STONE,1,6));
    registerOre("blockGlassColorless",Blocks.GLASS);
    registerOre("blockGlass",Blocks.GLASS);
    registerOre("blockGlass",new ItemStack(Blocks.STAINED_GLASS,1,WILDCARD_VALUE));
    registerOre("paneGlassColorless",Blocks.GLASS_PANE);
    registerOre("paneGlass",Blocks.GLASS_PANE);
    registerOre("paneGlass",new ItemStack(Blocks.STAINED_GLASS_PANE,1,WILDCARD_VALUE));
    registerOre("chest",Blocks.CHEST);
    registerOre("chest",Blocks.ENDER_CHEST);
    registerOre("chest",Blocks.TRAPPED_CHEST);
    registerOre("chestWood",Blocks.CHEST);
    registerOre("chestEnder",Blocks.ENDER_CHEST);
    registerOre("chestTrapped",Blocks.TRAPPED_CHEST);
  }
  Map<ItemStack,String> replacements=new HashMap<ItemStack,String>();
  replacements.put(new ItemStack(Items.STICK),"stickWood");
  replacements.put(new ItemStack(Blocks.PLANKS),"plankWood");
  replacements.put(new ItemStack(Blocks.PLANKS,1,WILDCARD_VALUE),"plankWood");
  replacements.put(new ItemStack(Blocks.WOODEN_SLAB,1,WILDCARD_VALUE),"slabWood");
  replacements.put(new ItemStack(Items.GOLD_INGOT),"ingotGold");
  replacements.put(new ItemStack(Items.IRON_INGOT),"ingotIron");
  replacements.put(new ItemStack(Items.DIAMOND),"gemDiamond");
  replacements.put(new ItemStack(Items.EMERALD),"gemEmerald");
  replacements.put(new ItemStack(Items.PRISMARINE_SHARD),"gemPrismarine");
  replacements.put(new ItemStack(Items.PRISMARINE_CRYSTALS),"dustPrismarine");
  replacements.put(new ItemStack(Items.REDSTONE),"dustRedstone");
  replacements.put(new ItemStack(Items.GLOWSTONE_DUST),"dustGlowstone");
  replacements.put(new ItemStack(Items.REEDS),"sugarcane");
  replacements.put(new ItemStack(Blocks.CACTUS),"blockCactus");
  replacements.put(new ItemStack(Items.PAPER),"paper");
  replacements.put(new ItemStack(Items.SLIME_BALL),"slimeball");
  replacements.put(new ItemStack(Items.STRING),"string");
  replacements.put(new ItemStack(Items.LEATHER),"leather");
  replacements.put(new ItemStack(Items.ENDER_PEARL),"enderpearl");
  replacements.put(new ItemStack(Items.GUNPOWDER),"gunpowder");
  replacements.put(new ItemStack(Items.NETHER_STAR),"netherStar");
  replacements.put(new ItemStack(Items.FEATHER),"feather");
  replacements.put(new ItemStack(Items.BONE),"bone");
  replacements.put(new ItemStack(Items.EGG),"egg");
  replacements.put(new ItemStack(Blocks.STONE),"stone");
  replacements.put(new ItemStack(Blocks.COBBLESTONE),"cobblestone");
  replacements.put(new ItemStack(Blocks.COBBLESTONE,1,WILDCARD_VALUE),"cobblestone");
  replacements.put(new ItemStack(Blocks.GLOWSTONE),"glowstone");
  replacements.put(new ItemStack(Blocks.GLASS),"blockGlassColorless");
  replacements.put(new ItemStack(Blocks.PRISMARINE),"prismarine");
  replacements.put(new ItemStack(Blocks.STONE,1,1),"stoneGranite");
  replacements.put(new ItemStack(Blocks.STONE,1,2),"stoneGranitePolished");
  replacements.put(new ItemStack(Blocks.STONE,1,3),"stoneDiorite");
  replacements.put(new ItemStack(Blocks.STONE,1,4),"stoneDioritePolished");
  replacements.put(new ItemStack(Blocks.STONE,1,5),"stoneAndesite");
  replacements.put(new ItemStack(Blocks.STONE,1,6),"stoneAndesitePolished");
  replacements.put(new ItemStack(Blocks.CHEST),"chestWood");
  replacements.put(new ItemStack(Blocks.ENDER_CHEST),"chestEnder");
  replacements.put(new ItemStack(Blocks.TRAPPED_CHEST),"chestTrapped");
  String[] dyes={"Black","Red","Green","Brown","Blue","Purple","Cyan","LightGray","Gray","Pink","Lime","Yellow","LightBlue","Magenta","Orange","White"};
  for (int i=0; i < 16; i++) {
    ItemStack dye=new ItemStack(Items.DYE,1,i);
    ItemStack block=new ItemStack(Blocks.STAINED_GLASS,1,15 - i);
    ItemStack pane=new ItemStack(Blocks.STAINED_GLASS_PANE,1,15 - i);
    if (!hasInit) {
      registerOre("dye" + dyes[i],dye);
      registerOre("blockGlass" + dyes[i],block);
      registerOre("paneGlass" + dyes[i],pane);
    }
    replacements.put(dye,"dye" + dyes[i]);
    replacements.put(block,"blockGlass" + dyes[i]);
    replacements.put(pane,"paneGlass" + dyes[i]);
  }
  hasInit=true;
  ItemStack[] replaceStacks=replacements.keySet().toArray(new ItemStack[replacements.keySet().size()]);
  ItemStack[] exclusions=new ItemStack[]{new ItemStack(Blocks.LAPIS_BLOCK),new ItemStack(Items.COOKIE),new ItemStack(Blocks.STONEBRICK),new ItemStack(Blocks.STONE_SLAB,1,WILDCARD_VALUE),new ItemStack(Blocks.STONE_STAIRS),new ItemStack(Blocks.COBBLESTONE_WALL),new ItemStack(Blocks.OAK_FENCE),new ItemStack(Blocks.OAK_FENCE_GATE),new ItemStack(Blocks.OAK_STAIRS),new ItemStack(Blocks.SPRUCE_FENCE),new ItemStack(Blocks.SPRUCE_FENCE_GATE),new ItemStack(Blocks.SPRUCE_STAIRS),new ItemStack(Blocks.BIRCH_STAIRS),new ItemStack(Blocks.BIRCH_FENCE_GATE),new ItemStack(Blocks.BIRCH_STAIRS),new ItemStack(Blocks.JUNGLE_FENCE),new ItemStack(Blocks.JUNGLE_FENCE_GATE),new ItemStack(Blocks.JUNGLE_STAIRS),new ItemStack(Blocks.ACACIA_FENCE),new ItemStack(Blocks.ACACIA_FENCE_GATE),new ItemStack(Blocks.ACACIA_STAIRS),new ItemStack(Blocks.DARK_OAK_FENCE),new ItemStack(Blocks.DARK_OAK_FENCE_GATE),new ItemStack(Blocks.DARK_OAK_STAIRS),new ItemStack(Blocks.WOODEN_SLAB),new ItemStack(Blocks.GLASS_PANE),new ItemStack(Blocks.field_189880_di),new ItemStack(Items.BOAT),null};
  List<IRecipe> recipes=CraftingManager.getInstance().getRecipeList();
  List<IRecipe> recipesToRemove=new ArrayList<IRecipe>();
  List<IRecipe> recipesToAdd=new ArrayList<IRecipe>();
  for (  Object obj : recipes) {
    if (obj.getClass() == ShapedRecipes.class) {
      ShapedRecipes recipe=(ShapedRecipes)obj;
      ItemStack output=recipe.getRecipeOutput();
      if (output != null && containsMatch(false,exclusions,output)) {
        continue;
      }
      if (containsMatch(true,recipe.recipeItems,replaceStacks)) {
        recipesToRemove.add(recipe);
        recipesToAdd.add(new ShapedOreRecipe(recipe,replacements));
      }
    }
 else     if (obj.getClass() == ShapelessRecipes.class) {
      ShapelessRecipes recipe=(ShapelessRecipes)obj;
      ItemStack output=recipe.getRecipeOutput();
      if (output != null && containsMatch(false,exclusions,output)) {
        continue;
      }
      if (containsMatch(true,recipe.recipeItems.toArray(new ItemStack[recipe.recipeItems.size()]),replaceStacks)) {
        recipesToRemove.add((IRecipe)obj);
        IRecipe newRecipe=new ShapelessOreRecipe(recipe,replacements);
        recipesToAdd.add(newRecipe);
      }
    }
  }
  recipes.removeAll(recipesToRemove);
  recipes.addAll(recipesToAdd);
  if (recipesToRemove.size() > 0) {
    FMLLog.info("Replaced %d ore recipes",recipesToRemove.size());
  }
}
