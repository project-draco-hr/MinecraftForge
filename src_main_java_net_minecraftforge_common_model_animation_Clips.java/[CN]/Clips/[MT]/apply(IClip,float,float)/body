{
  return Pair.<IModelState,Iterable<Event>>of(new IModelState(){
    public Optional<TRSRTransformation> apply(    Optional<? extends IModelPart> part){
      if (!part.isPresent() || !(part.get() instanceof IJoint)) {
        return Optional.absent();
      }
      IJoint joint=(IJoint)part.get();
      TRSRTransformation jointTransform=clip.apply(joint).apply(time).compose(joint.getInvBindPose());
      Optional<TRSRTransformation> parentTransform=Optional.absent();
      if (joint.getParent().isPresent()) {
        parentTransform=apply(Optional.of(joint.getParent().get()));
      }
      if (parentTransform.isPresent()) {
        jointTransform=parentTransform.get().compose(jointTransform);
      }
      return Optional.of(jointTransform);
    }
  }
,clip.pastEvents(lastPollTime,time));
}
