{
  return Pair.<IModelState,Iterable<Event>>of(new IModelState(){
    public Optional<TRSRTransformation> apply(    Optional<? extends IModelPart> part){
      if (!part.isPresent() || !(part.get() instanceof IJoint)) {
        return Optional.absent();
      }
      IJoint joint=(IJoint)part.get();
      TRSRTransformation jointTransform=clip.apply(joint).apply(time).compose(joint.getInvBindPose());
      Optional<? extends IJoint> parent=joint.getParent();
      while (parent.isPresent()) {
        TRSRTransformation parentTransform=clip.apply(parent.get()).apply(time);
        jointTransform=parentTransform.compose(jointTransform);
        parent=parent.get().getParent();
      }
      return Optional.of(jointTransform);
    }
  }
,clip.pastEvents(lastPollTime,time));
}
