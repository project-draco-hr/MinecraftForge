{
  Arrays.sort(armor);
  int start=0;
  double total=0;
  int priority=armor[0].Priority;
  int pStart=0;
  boolean pChange=false;
  boolean pFinished=false;
  if (DEBUG) {
    for (    ArmorProperties prop : armor) {
      System.out.println(prop);
    }
    System.out.println("========================");
  }
  for (int x=0; x < armor.length; x++) {
    total+=armor[x].AbsorbRatio;
    if (x == armor.length - 1 || armor[x].Priority != priority) {
      if (armor[x].Priority != priority) {
        total-=armor[x].AbsorbRatio;
        x--;
        pChange=true;
      }
      if (total > 1) {
        for (int y=start; y <= x; y++) {
          double newRatio=armor[y].AbsorbRatio / total;
          if (newRatio * damage > armor[y].AbsorbMax) {
            armor[y].AbsorbRatio=(double)armor[y].AbsorbMax / damage;
            total=0;
            for (int z=pStart; z <= y; z++) {
              total+=armor[z].AbsorbRatio;
            }
            start=y + 1;
            x=y;
            break;
          }
 else {
            armor[y].AbsorbRatio=newRatio;
            pFinished=true;
          }
        }
        if (pChange && pFinished) {
          damage-=(damage * total);
          total=0;
          start=x + 1;
          priority=armor[start].Priority;
          pStart=start;
          pChange=false;
          pFinished=false;
          if (damage <= 0) {
            for (int y=x + 1; y < armor.length; y++) {
              armor[y].AbsorbRatio=0;
            }
            break;
          }
        }
      }
 else {
        for (int y=start; y <= x; y++) {
          total-=armor[y].AbsorbRatio;
          if (damage * armor[y].AbsorbRatio > armor[y].AbsorbMax) {
            armor[y].AbsorbRatio=(double)armor[y].AbsorbMax / (double)damage;
          }
          total+=armor[y].AbsorbRatio;
        }
        damage-=(damage * total);
        total=0;
        if (x != armor.length - 1) {
          start=x + 1;
          priority=armor[start].Priority;
          pStart=start;
          pChange=false;
          if (damage <= 0) {
            for (int y=x + 1; y < armor.length; y++) {
              armor[y].AbsorbRatio=0;
            }
            break;
          }
        }
      }
    }
  }
  if (DEBUG) {
    for (    ArmorProperties prop : armor) {
      System.out.println(prop);
    }
  }
}
