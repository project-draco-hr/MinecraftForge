{
  BufferedReader reader=null;
  InputStream inputStream=null;
  String currentLine=null;
  int lineCount=0;
  try {
    inputStream=fileURL.openStream();
    reader=new BufferedReader(new InputStreamReader(inputStream));
    while ((currentLine=reader.readLine()) != null) {
      lineCount++;
      currentLine=currentLine.replaceAll("\\s+"," ").trim();
      if (currentLine.startsWith("#") || currentLine.length() == 0) {
        continue;
      }
 else       if (currentLine.startsWith("v ")) {
        Vertex vertex=parseVertex(currentLine);
        if (vertex != null) {
          vertices.add(vertex);
        }
 else {
          throw new ParseException("Error parsing entry ('" + currentLine + "'"+ ", line "+ lineCount+ ") in file '"+ fileURL.getFile()+ "'",lineCount);
        }
      }
 else       if (currentLine.startsWith("vn ")) {
        Vertex vertex=parseVertexNormal(currentLine);
        if (vertex != null) {
          vertexNormals.add(vertex);
        }
 else {
          throw new ParseException("Error parsing entry ('" + currentLine + "'"+ ", line "+ lineCount+ ") in file '"+ fileURL.getFile()+ "'",lineCount);
        }
      }
 else       if (currentLine.startsWith("vt ")) {
        TextureCoordinate textureCoordinate=parseTextureCoordinate(currentLine);
        if (textureCoordinate != null) {
          textureCoordinates.add(textureCoordinate);
        }
 else {
          throw new ParseException("Error parsing entry ('" + currentLine + "'"+ ", line "+ lineCount+ ") in file '"+ fileURL.getFile()+ "'",lineCount);
        }
      }
 else       if (currentLine.startsWith("f ")) {
        if (currentGroupObject == null) {
          currentGroupObject=new GroupObject("Default");
        }
        Face face=parseFace(currentLine);
        if (face != null) {
          currentGroupObject.faces.add(face);
        }
 else {
          throw new ParseException("Error parsing entry ('" + currentLine + "'"+ ", line "+ lineCount+ ") in file '"+ fileURL.getFile()+ "'",lineCount);
        }
      }
 else       if (currentLine.startsWith("g ") | currentLine.startsWith("o ")) {
        GroupObject group=parseGroupObject(currentLine);
        if (group != null) {
          if (currentGroupObject != null) {
            groupObjects.add(currentGroupObject);
          }
        }
 else {
          throw new ParseException("Error parsing entry ('" + currentLine + "'"+ ", line "+ lineCount+ ") in file '"+ fileURL.getFile()+ "'",lineCount);
        }
        currentGroupObject=group;
      }
    }
    groupObjects.add(currentGroupObject);
  }
 catch (  IOException e) {
    e.printStackTrace();
  }
 finally {
    try {
      reader.close();
    }
 catch (    IOException e) {
      e.printStackTrace();
    }
    try {
      inputStream.close();
    }
 catch (    IOException e) {
      e.printStackTrace();
    }
  }
}
