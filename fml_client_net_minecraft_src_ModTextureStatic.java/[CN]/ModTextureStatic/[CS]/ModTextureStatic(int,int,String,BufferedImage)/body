{
  super(icon);
  RenderEngine re=FMLClientHandler.instance().getClient().field_6315_n;
  targetTex=target;
  storedSize=size;
  field_1129_e=size;
  field_1128_f=re.func_1070_a(target);
  func_782_a(re);
  int sWidth=image.getWidth();
  int sHeight=image.getHeight();
  int tWidth=GL11.glGetTexLevelParameteri(GL_TEXTURE_2D,0,GL_TEXTURE_WIDTH) >> 4;
  int tHeight=GL11.glGetTexLevelParameteri(GL_TEXTURE_2D,0,GL_TEXTURE_HEIGHT) >> 4;
  if (tWidth != TextureFX.iconTileSize || tHeight != TextureFX.iconTileSize) {
    FMLCommonHandler.instance().getFMLLogger().warning(String.format("Override %s is not applied - there is a mismatch between the underlying texture (%s) size %d,%d and the current texture tile size %d",target,tWidth,tHeight,TextureFX.iconTileSize));
    errored=true;
    return;
  }
  pixels=new int[TextureFX.tileSizeSquare];
  if (tWidth == sWidth && tHeight == sHeight) {
    image.getRGB(0,0,sWidth,sHeight,pixels,0,sWidth);
  }
 else {
    BufferedImage tmp=new BufferedImage(tWidth,tHeight,6);
    Graphics2D gfx=tmp.createGraphics();
    gfx.drawImage(image,0,0,tWidth,tHeight,0,0,sWidth,sHeight,(ImageObserver)null);
    tmp.getRGB(0,0,tWidth,tHeight,pixels,0,tWidth);
    gfx.dispose();
  }
  update();
}
