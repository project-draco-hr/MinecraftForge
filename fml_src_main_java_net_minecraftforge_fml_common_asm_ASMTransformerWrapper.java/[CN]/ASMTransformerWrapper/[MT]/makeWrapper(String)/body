{
  if (!wrapperModMap.containsKey(fileName) || !wrapperParentMap.containsKey(fileName) || !fileName.endsWith(".class")) {
    throw new IllegalArgumentException("makeWrapper called with strange argument: " + fileName);
  }
  String name=fileName.substring(0,fileName.length() - ".class".length());
  try {
    Type wrapper=Type.getType(TransformerWrapper.class);
    ClassWriter writer=new ClassWriter(ClassWriter.COMPUTE_FRAMES);
    writer.visit(Opcodes.V1_6,Opcodes.ACC_PUBLIC,name,null,wrapper.getInternalName(),null);
    Method m=Method.getMethod("void <init> ()");
    GeneratorAdapter mg=new GeneratorAdapter(Opcodes.ACC_PUBLIC,m,null,null,writer);
    mg.loadThis();
    mg.invokeConstructor(wrapper,m);
    mg.returnValue();
    mg.endMethod();
    m=Method.getMethod("java.lang.String getParentClass ()");
    mg=new GeneratorAdapter(Opcodes.ACC_PROTECTED,m,null,null,writer);
    mg.push(wrapperParentMap.get(fileName));
    mg.returnValue();
    mg.endMethod();
    m=Method.getMethod("java.lang.String getCoreMod ()");
    mg=new GeneratorAdapter(Opcodes.ACC_PROTECTED,m,null,null,writer);
    mg.push(wrapperModMap.get(fileName));
    mg.returnValue();
    mg.endMethod();
    writer.visitEnd();
    return writer.toByteArray();
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
}
