{
  CodeSource codeSource=getClass().getProtectionDomain().getCodeSource();
  boolean goodFML=false;
  if (codeSource.getLocation().getProtocol().equals("jar")) {
    Certificate[] certificates=codeSource.getCertificates();
    if (certificates != null && certificates.length > 0) {
      Certificate certificate=certificates[0];
      String fingerprint=CertificateHelper.getFingerprint(certificate);
      if (fingerprint.equals(FMLFINGERPRINT)) {
        FMLLog.info("Found valid fingerprint for FML: %s",fingerprint);
        goodFML=true;
      }
 else       if (fingerprint.equals(FORGEFINGERPRINT)) {
        FMLLog.info("Found valid fingerprint for Minecraft Forge: %s",fingerprint);
        goodFML=true;
      }
 else {
        FMLLog.severe("Found invalid fingerprint for FML: %s",fingerprint);
      }
    }
  }
 else {
    goodFML=true;
  }
  if (!goodFML) {
    FMLLog.severe("FML appears to be missing any signature data. This is not a good thing");
  }
  byte[] mlClass=cl.getClassBytes("ModLoader");
  if (mlClass == null) {
    return null;
  }
  MLDetectorClassVisitor mlTester=new MLDetectorClassVisitor();
  ClassReader cr=new ClassReader(mlClass);
  cr.accept(mlTester,ClassReader.SKIP_CODE);
  if (!mlTester.foundMarker) {
    JOptionPane.showMessageDialog(null,"<html>CRITICAL ERROR<br/>" + "ModLoader was detected in this environment<br/>" + "ForgeModLoader cannot be installed alongside ModLoader<br/>"+ "All mods should work without ModLoader being installed<br/>"+ "Because ForgeModLoader is 100% compatible with ModLoader<br/>"+ "Re-install Minecraft Forge or Forge ModLoader into a clean<br/>"+ "jar and try again.","ForgeModLoader critical error",JOptionPane.ERROR_MESSAGE);
    throw new RuntimeException("Invalid ModLoader class detected");
  }
  return null;
}
