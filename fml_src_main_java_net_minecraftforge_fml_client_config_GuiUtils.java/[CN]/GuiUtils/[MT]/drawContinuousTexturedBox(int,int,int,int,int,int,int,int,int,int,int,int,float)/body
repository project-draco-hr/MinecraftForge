{
  GlStateManager.color(1.0F,1.0F,1.0F,1.0F);
  GlStateManager.enableBlend();
  GlStateManager.tryBlendFuncSeparate(GL11.GL_SRC_ALPHA,GL11.GL_ONE_MINUS_SRC_ALPHA,1,0);
  int fillerWidth=textureWidth - leftBorder - rightBorder;
  int fillerHeight=textureHeight - topBorder - bottomBorder;
  int canvasWidth=width - leftBorder - rightBorder;
  int canvasHeight=height - topBorder - bottomBorder;
  int xPasses=canvasWidth / fillerWidth;
  int remainderWidth=canvasWidth % fillerWidth;
  int yPasses=canvasHeight / fillerHeight;
  int remainderHeight=canvasHeight % fillerHeight;
  drawTexturedModalRect(x,y,u,v,leftBorder,topBorder,zLevel);
  drawTexturedModalRect(x + leftBorder + canvasWidth,y,u + leftBorder + fillerWidth,v,rightBorder,topBorder,zLevel);
  drawTexturedModalRect(x,y + topBorder + canvasHeight,u,v + topBorder + fillerHeight,leftBorder,bottomBorder,zLevel);
  drawTexturedModalRect(x + leftBorder + canvasWidth,y + topBorder + canvasHeight,u + leftBorder + fillerWidth,v + topBorder + fillerHeight,rightBorder,bottomBorder,zLevel);
  for (int i=0; i < xPasses + (remainderWidth > 0 ? 1 : 0); i++) {
    drawTexturedModalRect(x + leftBorder + (i * fillerWidth),y,u + leftBorder,v,(i == xPasses ? remainderWidth : fillerWidth),topBorder,zLevel);
    drawTexturedModalRect(x + leftBorder + (i * fillerWidth),y + topBorder + canvasHeight,u + leftBorder,v + topBorder + fillerHeight,(i == xPasses ? remainderWidth : fillerWidth),bottomBorder,zLevel);
    for (int j=0; j < yPasses + (remainderHeight > 0 ? 1 : 0); j++)     drawTexturedModalRect(x + leftBorder + (i * fillerWidth),y + topBorder + (j * fillerHeight),u + leftBorder,v + topBorder,(i == xPasses ? remainderWidth : fillerWidth),(j == yPasses ? remainderHeight : fillerHeight),zLevel);
  }
  for (int j=0; j < yPasses + (remainderHeight > 0 ? 1 : 0); j++) {
    drawTexturedModalRect(x,y + topBorder + (j * fillerHeight),u,v + topBorder,leftBorder,(j == yPasses ? remainderHeight : fillerHeight),zLevel);
    drawTexturedModalRect(x + leftBorder + canvasWidth,y + topBorder + (j * fillerHeight),u + leftBorder + fillerWidth,v + topBorder,rightBorder,(j == yPasses ? remainderHeight : fillerHeight),zLevel);
  }
}
