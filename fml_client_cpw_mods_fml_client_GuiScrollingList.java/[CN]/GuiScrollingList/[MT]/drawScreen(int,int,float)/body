{
  this.mouseX=mouseX;
  this.mouseY=mouseY;
  this.drawBackground();
  int listLength=this.getSize();
  int scrollBarXStart=this.listWidth / 2 + 124;
  int scrollBarXEnd=scrollBarXStart + 6;
  int var9;
  int var10;
  int var11;
  int var13;
  int var19;
  if (Mouse.isButtonDown(0)) {
    if (this.initialMouseClickY == -1.0F) {
      boolean var7=true;
      if (mouseY >= this.top && mouseY <= this.bottom) {
        int var8=this.listWidth / 2 - 110;
        var9=this.listWidth / 2 + 110;
        var10=mouseY - this.top - this.field_27261_r + (int)this.scrollDistance - 4;
        var11=var10 / this.slotHeight;
        if (mouseX >= var8 && mouseX <= var9 && var11 >= 0 && var10 >= 0 && var11 < listLength) {
          boolean var12=var11 == this.selectedIndex && System.currentTimeMillis() - this.lastClickTime < 250L;
          this.elementClicked(var11,var12);
          this.selectedIndex=var11;
          this.lastClickTime=System.currentTimeMillis();
        }
 else         if (mouseX >= var8 && mouseX <= var9 && var10 < 0) {
          this.func_27255_a(mouseX - var8,mouseY - this.top + (int)this.scrollDistance - 4);
          var7=false;
        }
        if (mouseX >= scrollBarXStart && mouseX <= scrollBarXEnd) {
          this.scrollFactor=-1.0F;
          var19=this.getContentHeight() - (this.bottom - this.top - 4);
          if (var19 < 1) {
            var19=1;
          }
          var13=(int)((float)((this.bottom - this.top) * (this.bottom - this.top)) / (float)this.getContentHeight());
          if (var13 < 32) {
            var13=32;
          }
          if (var13 > this.bottom - this.top - 8) {
            var13=this.bottom - this.top - 8;
          }
          this.scrollFactor/=(float)(this.bottom - this.top - var13) / (float)var19;
        }
 else {
          this.scrollFactor=1.0F;
        }
        if (var7) {
          this.initialMouseClickY=(float)mouseY;
        }
 else {
          this.initialMouseClickY=-2.0F;
        }
      }
 else {
        this.initialMouseClickY=-2.0F;
      }
    }
 else     if (this.initialMouseClickY >= 0.0F) {
      this.scrollDistance-=((float)mouseY - this.initialMouseClickY) * this.scrollFactor;
      this.initialMouseClickY=(float)mouseY;
    }
  }
 else {
    while (Mouse.next()) {
      int var16=Mouse.getEventDWheel();
      if (var16 != 0) {
        if (var16 > 0) {
          var16=-1;
        }
 else         if (var16 < 0) {
          var16=1;
        }
        this.scrollDistance+=(float)(var16 * this.slotHeight / 2);
      }
    }
    this.initialMouseClickY=-1.0F;
  }
  this.applyScrollLimits();
  GL11.glDisable(GL11.GL_LIGHTING);
  GL11.glDisable(GL11.GL_FOG);
  Tessellator var18=Tessellator.field_1512_a;
  GL11.glBindTexture(GL11.GL_TEXTURE_2D,this.client.field_6315_n.func_1070_a("/gui/background.png"));
  GL11.glColor4f(1.0F,1.0F,1.0F,1.0F);
  float var17=32.0F;
  var18.func_977_b();
  var18.func_990_b(2105376);
  var18.func_983_a((double)this.left,(double)this.bottom,0.0D,(double)((float)this.left / var17),(double)((float)(this.bottom + (int)this.scrollDistance) / var17));
  var18.func_983_a((double)this.right,(double)this.bottom,0.0D,(double)((float)this.right / var17),(double)((float)(this.bottom + (int)this.scrollDistance) / var17));
  var18.func_983_a((double)this.right,(double)this.top,0.0D,(double)((float)this.right / var17),(double)((float)(this.top + (int)this.scrollDistance) / var17));
  var18.func_983_a((double)this.left,(double)this.top,0.0D,(double)((float)this.left / var17),(double)((float)(this.top + (int)this.scrollDistance) / var17));
  var18.func_982_a();
  var9=this.listWidth / 2 - 92 - 16;
  var10=this.top + 4 - (int)this.scrollDistance;
  if (this.field_27262_q) {
    this.func_27260_a(var9,var10,var18);
  }
  int var14;
  for (var11=0; var11 < listLength; ++var11) {
    var19=var10 + var11 * this.slotHeight + this.field_27261_r;
    var13=this.slotHeight - 4;
    if (var19 <= this.bottom && var19 + var13 >= this.top) {
      if (this.field_25123_p && this.isSelected(var11)) {
        var14=this.listWidth / 2 - 110;
        int var15=this.listWidth / 2 + 110;
        GL11.glColor4f(1.0F,1.0F,1.0F,1.0F);
        GL11.glDisable(GL11.GL_TEXTURE_2D);
        var18.func_977_b();
        var18.func_990_b(8421504);
        var18.func_983_a((double)var14,(double)(var19 + var13 + 2),0.0D,0.0D,1.0D);
        var18.func_983_a((double)var15,(double)(var19 + var13 + 2),0.0D,1.0D,1.0D);
        var18.func_983_a((double)var15,(double)(var19 - 2),0.0D,1.0D,0.0D);
        var18.func_983_a((double)var14,(double)(var19 - 2),0.0D,0.0D,0.0D);
        var18.func_990_b(0);
        var18.func_983_a((double)(var14 + 1),(double)(var19 + var13 + 1),0.0D,0.0D,1.0D);
        var18.func_983_a((double)(var15 - 1),(double)(var19 + var13 + 1),0.0D,1.0D,1.0D);
        var18.func_983_a((double)(var15 - 1),(double)(var19 - 1),0.0D,1.0D,0.0D);
        var18.func_983_a((double)(var14 + 1),(double)(var19 - 1),0.0D,0.0D,0.0D);
        var18.func_982_a();
        GL11.glEnable(GL11.GL_TEXTURE_2D);
      }
      this.drawSlot(var11,var9,var19,var13,var18);
    }
  }
  GL11.glDisable(GL11.GL_DEPTH_TEST);
  byte var20=4;
  this.overlayBackground(0,this.top,255,255);
  this.overlayBackground(this.bottom,this.listHeight,255,255);
  GL11.glEnable(GL11.GL_BLEND);
  GL11.glBlendFunc(GL11.GL_SRC_ALPHA,GL11.GL_ONE_MINUS_SRC_ALPHA);
  GL11.glDisable(GL11.GL_ALPHA_TEST);
  GL11.glShadeModel(GL11.GL_SMOOTH);
  GL11.glDisable(GL11.GL_TEXTURE_2D);
  var18.func_977_b();
  var18.func_6513_a(0,0);
  var18.func_983_a((double)this.left,(double)(this.top + var20),0.0D,0.0D,1.0D);
  var18.func_983_a((double)this.right,(double)(this.top + var20),0.0D,1.0D,1.0D);
  var18.func_6513_a(0,255);
  var18.func_983_a((double)this.right,(double)this.top,0.0D,1.0D,0.0D);
  var18.func_983_a((double)this.left,(double)this.top,0.0D,0.0D,0.0D);
  var18.func_982_a();
  var18.func_977_b();
  var18.func_6513_a(0,255);
  var18.func_983_a((double)this.left,(double)this.bottom,0.0D,0.0D,1.0D);
  var18.func_983_a((double)this.right,(double)this.bottom,0.0D,1.0D,1.0D);
  var18.func_6513_a(0,0);
  var18.func_983_a((double)this.right,(double)(this.bottom - var20),0.0D,1.0D,0.0D);
  var18.func_983_a((double)this.left,(double)(this.bottom - var20),0.0D,0.0D,0.0D);
  var18.func_982_a();
  var19=this.getContentHeight() - (this.bottom - this.top - 4);
  if (var19 > 0) {
    var13=(this.bottom - this.top) * (this.bottom - this.top) / this.getContentHeight();
    if (var13 < 32) {
      var13=32;
    }
    if (var13 > this.bottom - this.top - 8) {
      var13=this.bottom - this.top - 8;
    }
    var14=(int)this.scrollDistance * (this.bottom - this.top - var13) / var19 + this.top;
    if (var14 < this.top) {
      var14=this.top;
    }
    var18.func_977_b();
    var18.func_6513_a(0,255);
    var18.func_983_a((double)scrollBarXStart,(double)this.bottom,0.0D,0.0D,1.0D);
    var18.func_983_a((double)scrollBarXEnd,(double)this.bottom,0.0D,1.0D,1.0D);
    var18.func_983_a((double)scrollBarXEnd,(double)this.top,0.0D,1.0D,0.0D);
    var18.func_983_a((double)scrollBarXStart,(double)this.top,0.0D,0.0D,0.0D);
    var18.func_982_a();
    var18.func_977_b();
    var18.func_6513_a(8421504,255);
    var18.func_983_a((double)scrollBarXStart,(double)(var14 + var13),0.0D,0.0D,1.0D);
    var18.func_983_a((double)scrollBarXEnd,(double)(var14 + var13),0.0D,1.0D,1.0D);
    var18.func_983_a((double)scrollBarXEnd,(double)var14,0.0D,1.0D,0.0D);
    var18.func_983_a((double)scrollBarXStart,(double)var14,0.0D,0.0D,0.0D);
    var18.func_982_a();
    var18.func_977_b();
    var18.func_6513_a(12632256,255);
    var18.func_983_a((double)scrollBarXStart,(double)(var14 + var13 - 1),0.0D,0.0D,1.0D);
    var18.func_983_a((double)(scrollBarXEnd - 1),(double)(var14 + var13 - 1),0.0D,1.0D,1.0D);
    var18.func_983_a((double)(scrollBarXEnd - 1),(double)var14,0.0D,1.0D,0.0D);
    var18.func_983_a((double)scrollBarXStart,(double)var14,0.0D,0.0D,0.0D);
    var18.func_982_a();
  }
  this.func_27257_b(mouseX,mouseY);
  GL11.glEnable(GL11.GL_TEXTURE_2D);
  GL11.glShadeModel(GL11.GL_FLAT);
  GL11.glEnable(GL11.GL_ALPHA_TEST);
  GL11.glDisable(GL11.GL_BLEND);
}
