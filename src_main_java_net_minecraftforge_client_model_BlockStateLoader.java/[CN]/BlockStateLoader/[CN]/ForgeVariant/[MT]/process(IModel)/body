{
  int size=parts.size();
  boolean hasBase=base != ModelLoaderRegistry.getMissingModel();
  if (hasBase) {
    base=runModelHooks(base,smooth,gui3d,this.isUvLock(),textures,customData);
    if (size <= 0)     return base;
  }
  IModelState baseTr=getState();
  ImmutableMap.Builder<String,Pair<IModel,IModelState>> models=ImmutableMap.builder();
  for (  Entry<String,SubModel> entry : parts.entrySet()) {
    SubModel part=entry.getValue();
    IModel model=ModelLoaderRegistry.getModelOrLogError(part.getModelLocation(),"Unable to load block sub-model: \'" + part.getModelLocation());
    IModelState partState=new ModelStateComposition(baseTr,part.getState());
    models.put(entry.getKey(),Pair.<IModel,IModelState>of(runModelHooks(model,part.smooth,part.gui3d,part.uvLock,part.getTextures(),part.getCustomData()),partState));
  }
  return new MultiModel(getModelLocation(),hasBase ? base : null,baseTr,models.build());
}
